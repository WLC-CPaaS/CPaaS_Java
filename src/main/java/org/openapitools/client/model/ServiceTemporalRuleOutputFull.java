/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ServiceTemporalRuleOutputFull
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class ServiceTemporalRuleOutputFull {
  public static final String SERIALIZED_NAME_CYCLE = "cycle";
  @SerializedName(SERIALIZED_NAME_CYCLE)
  @javax.annotation.Nullable
  private String cycle;

  public static final String SERIALIZED_NAME_DAYS = "days";
  @SerializedName(SERIALIZED_NAME_DAYS)
  @javax.annotation.Nullable
  private List<Integer> days = new ArrayList<>();

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  @javax.annotation.Nullable
  private Boolean enabled;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private String id;

  public static final String SERIALIZED_NAME_INTERVAL = "interval";
  @SerializedName(SERIALIZED_NAME_INTERVAL)
  @javax.annotation.Nullable
  private Integer interval;

  public static final String SERIALIZED_NAME_MONTH = "month";
  @SerializedName(SERIALIZED_NAME_MONTH)
  @javax.annotation.Nullable
  private Integer month;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nullable
  private String name;

  public static final String SERIALIZED_NAME_ORDINAL = "ordinal";
  @SerializedName(SERIALIZED_NAME_ORDINAL)
  @javax.annotation.Nullable
  private String ordinal;

  public static final String SERIALIZED_NAME_START_DATE = "start_date";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  @javax.annotation.Nullable
  private Integer startDate;

  public static final String SERIALIZED_NAME_TIME_WINDOW_START = "time_window_start";
  @SerializedName(SERIALIZED_NAME_TIME_WINDOW_START)
  @javax.annotation.Nullable
  private Integer timeWindowStart;

  public static final String SERIALIZED_NAME_TIME_WINDOW_STOP = "time_window_stop";
  @SerializedName(SERIALIZED_NAME_TIME_WINDOW_STOP)
  @javax.annotation.Nullable
  private Integer timeWindowStop;

  public static final String SERIALIZED_NAME_WDAYS = "wdays";
  @SerializedName(SERIALIZED_NAME_WDAYS)
  @javax.annotation.Nullable
  private List<String> wdays = new ArrayList<>();

  public ServiceTemporalRuleOutputFull() {
  }

  public ServiceTemporalRuleOutputFull cycle(@javax.annotation.Nullable String cycle) {
    this.cycle = cycle;
    return this;
  }

  /**
   * Get cycle
   * @return cycle
   */
  @javax.annotation.Nullable
  public String getCycle() {
    return cycle;
  }

  public void setCycle(@javax.annotation.Nullable String cycle) {
    this.cycle = cycle;
  }


  public ServiceTemporalRuleOutputFull days(@javax.annotation.Nullable List<Integer> days) {
    this.days = days;
    return this;
  }

  public ServiceTemporalRuleOutputFull addDaysItem(Integer daysItem) {
    if (this.days == null) {
      this.days = new ArrayList<>();
    }
    this.days.add(daysItem);
    return this;
  }

  /**
   * Get days
   * @return days
   */
  @javax.annotation.Nullable
  public List<Integer> getDays() {
    return days;
  }

  public void setDays(@javax.annotation.Nullable List<Integer> days) {
    this.days = days;
  }


  public ServiceTemporalRuleOutputFull enabled(@javax.annotation.Nullable Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Get enabled
   * @return enabled
   */
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(@javax.annotation.Nullable Boolean enabled) {
    this.enabled = enabled;
  }


  public ServiceTemporalRuleOutputFull id(@javax.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }


  public ServiceTemporalRuleOutputFull interval(@javax.annotation.Nullable Integer interval) {
    this.interval = interval;
    return this;
  }

  /**
   * Get interval
   * @return interval
   */
  @javax.annotation.Nullable
  public Integer getInterval() {
    return interval;
  }

  public void setInterval(@javax.annotation.Nullable Integer interval) {
    this.interval = interval;
  }


  public ServiceTemporalRuleOutputFull month(@javax.annotation.Nullable Integer month) {
    this.month = month;
    return this;
  }

  /**
   * Get month
   * @return month
   */
  @javax.annotation.Nullable
  public Integer getMonth() {
    return month;
  }

  public void setMonth(@javax.annotation.Nullable Integer month) {
    this.month = month;
  }


  public ServiceTemporalRuleOutputFull name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public ServiceTemporalRuleOutputFull ordinal(@javax.annotation.Nullable String ordinal) {
    this.ordinal = ordinal;
    return this;
  }

  /**
   * Get ordinal
   * @return ordinal
   */
  @javax.annotation.Nullable
  public String getOrdinal() {
    return ordinal;
  }

  public void setOrdinal(@javax.annotation.Nullable String ordinal) {
    this.ordinal = ordinal;
  }


  public ServiceTemporalRuleOutputFull startDate(@javax.annotation.Nullable Integer startDate) {
    this.startDate = startDate;
    return this;
  }

  /**
   * Get startDate
   * @return startDate
   */
  @javax.annotation.Nullable
  public Integer getStartDate() {
    return startDate;
  }

  public void setStartDate(@javax.annotation.Nullable Integer startDate) {
    this.startDate = startDate;
  }


  public ServiceTemporalRuleOutputFull timeWindowStart(@javax.annotation.Nullable Integer timeWindowStart) {
    this.timeWindowStart = timeWindowStart;
    return this;
  }

  /**
   * Get timeWindowStart
   * @return timeWindowStart
   */
  @javax.annotation.Nullable
  public Integer getTimeWindowStart() {
    return timeWindowStart;
  }

  public void setTimeWindowStart(@javax.annotation.Nullable Integer timeWindowStart) {
    this.timeWindowStart = timeWindowStart;
  }


  public ServiceTemporalRuleOutputFull timeWindowStop(@javax.annotation.Nullable Integer timeWindowStop) {
    this.timeWindowStop = timeWindowStop;
    return this;
  }

  /**
   * Get timeWindowStop
   * @return timeWindowStop
   */
  @javax.annotation.Nullable
  public Integer getTimeWindowStop() {
    return timeWindowStop;
  }

  public void setTimeWindowStop(@javax.annotation.Nullable Integer timeWindowStop) {
    this.timeWindowStop = timeWindowStop;
  }


  public ServiceTemporalRuleOutputFull wdays(@javax.annotation.Nullable List<String> wdays) {
    this.wdays = wdays;
    return this;
  }

  public ServiceTemporalRuleOutputFull addWdaysItem(String wdaysItem) {
    if (this.wdays == null) {
      this.wdays = new ArrayList<>();
    }
    this.wdays.add(wdaysItem);
    return this;
  }

  /**
   * Get wdays
   * @return wdays
   */
  @javax.annotation.Nullable
  public List<String> getWdays() {
    return wdays;
  }

  public void setWdays(@javax.annotation.Nullable List<String> wdays) {
    this.wdays = wdays;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceTemporalRuleOutputFull serviceTemporalRuleOutputFull = (ServiceTemporalRuleOutputFull) o;
    return Objects.equals(this.cycle, serviceTemporalRuleOutputFull.cycle) &&
        Objects.equals(this.days, serviceTemporalRuleOutputFull.days) &&
        Objects.equals(this.enabled, serviceTemporalRuleOutputFull.enabled) &&
        Objects.equals(this.id, serviceTemporalRuleOutputFull.id) &&
        Objects.equals(this.interval, serviceTemporalRuleOutputFull.interval) &&
        Objects.equals(this.month, serviceTemporalRuleOutputFull.month) &&
        Objects.equals(this.name, serviceTemporalRuleOutputFull.name) &&
        Objects.equals(this.ordinal, serviceTemporalRuleOutputFull.ordinal) &&
        Objects.equals(this.startDate, serviceTemporalRuleOutputFull.startDate) &&
        Objects.equals(this.timeWindowStart, serviceTemporalRuleOutputFull.timeWindowStart) &&
        Objects.equals(this.timeWindowStop, serviceTemporalRuleOutputFull.timeWindowStop) &&
        Objects.equals(this.wdays, serviceTemporalRuleOutputFull.wdays);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cycle, days, enabled, id, interval, month, name, ordinal, startDate, timeWindowStart, timeWindowStop, wdays);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceTemporalRuleOutputFull {\n");
    sb.append("    cycle: ").append(toIndentedString(cycle)).append("\n");
    sb.append("    days: ").append(toIndentedString(days)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    interval: ").append(toIndentedString(interval)).append("\n");
    sb.append("    month: ").append(toIndentedString(month)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ordinal: ").append(toIndentedString(ordinal)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    timeWindowStart: ").append(toIndentedString(timeWindowStart)).append("\n");
    sb.append("    timeWindowStop: ").append(toIndentedString(timeWindowStop)).append("\n");
    sb.append("    wdays: ").append(toIndentedString(wdays)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cycle");
    openapiFields.add("days");
    openapiFields.add("enabled");
    openapiFields.add("id");
    openapiFields.add("interval");
    openapiFields.add("month");
    openapiFields.add("name");
    openapiFields.add("ordinal");
    openapiFields.add("start_date");
    openapiFields.add("time_window_start");
    openapiFields.add("time_window_stop");
    openapiFields.add("wdays");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ServiceTemporalRuleOutputFull
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ServiceTemporalRuleOutputFull.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ServiceTemporalRuleOutputFull is not found in the empty JSON string", ServiceTemporalRuleOutputFull.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ServiceTemporalRuleOutputFull.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ServiceTemporalRuleOutputFull` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("cycle") != null && !jsonObj.get("cycle").isJsonNull()) && !jsonObj.get("cycle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cycle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cycle").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("days") != null && !jsonObj.get("days").isJsonNull() && !jsonObj.get("days").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `days` to be an array in the JSON string but got `%s`", jsonObj.get("days").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("ordinal") != null && !jsonObj.get("ordinal").isJsonNull()) && !jsonObj.get("ordinal").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ordinal` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ordinal").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("wdays") != null && !jsonObj.get("wdays").isJsonNull() && !jsonObj.get("wdays").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `wdays` to be an array in the JSON string but got `%s`", jsonObj.get("wdays").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ServiceTemporalRuleOutputFull.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ServiceTemporalRuleOutputFull' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ServiceTemporalRuleOutputFull> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ServiceTemporalRuleOutputFull.class));

       return (TypeAdapter<T>) new TypeAdapter<ServiceTemporalRuleOutputFull>() {
           @Override
           public void write(JsonWriter out, ServiceTemporalRuleOutputFull value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ServiceTemporalRuleOutputFull read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ServiceTemporalRuleOutputFull given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ServiceTemporalRuleOutputFull
   * @throws IOException if the JSON string is invalid with respect to ServiceTemporalRuleOutputFull
   */
  public static ServiceTemporalRuleOutputFull fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ServiceTemporalRuleOutputFull.class);
  }

  /**
   * Convert an instance of ServiceTemporalRuleOutputFull to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

