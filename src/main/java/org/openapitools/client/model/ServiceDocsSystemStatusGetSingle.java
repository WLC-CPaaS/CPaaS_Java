/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ServiceSystemStatusOutput;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ServiceDocsSystemStatusGetSingle
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class ServiceDocsSystemStatusGetSingle {
  public static final String SERIALIZED_NAME_DATA = "data";
  @SerializedName(SERIALIZED_NAME_DATA)
  @javax.annotation.Nullable
  private ServiceSystemStatusOutput data;

  public static final String SERIALIZED_NAME_REQUEST_ID = "request_id";
  @SerializedName(SERIALIZED_NAME_REQUEST_ID)
  @javax.annotation.Nullable
  private String requestId;

  public static final String SERIALIZED_NAME_STATUS_CODE = "status_code";
  @SerializedName(SERIALIZED_NAME_STATUS_CODE)
  @javax.annotation.Nullable
  private Integer statusCode;

  public static final String SERIALIZED_NAME_SYSTEM_STATUS = "system_status";
  @SerializedName(SERIALIZED_NAME_SYSTEM_STATUS)
  @javax.annotation.Nullable
  private String systemStatus;

  public ServiceDocsSystemStatusGetSingle() {
  }

  public ServiceDocsSystemStatusGetSingle data(@javax.annotation.Nullable ServiceSystemStatusOutput data) {
    this.data = data;
    return this;
  }

  /**
   * Get data
   * @return data
   */
  @javax.annotation.Nullable
  public ServiceSystemStatusOutput getData() {
    return data;
  }

  public void setData(@javax.annotation.Nullable ServiceSystemStatusOutput data) {
    this.data = data;
  }


  public ServiceDocsSystemStatusGetSingle requestId(@javax.annotation.Nullable String requestId) {
    this.requestId = requestId;
    return this;
  }

  /**
   * Unique id for each request
   * @return requestId
   */
  @javax.annotation.Nullable
  public String getRequestId() {
    return requestId;
  }

  public void setRequestId(@javax.annotation.Nullable String requestId) {
    this.requestId = requestId;
  }


  public ServiceDocsSystemStatusGetSingle statusCode(@javax.annotation.Nullable Integer statusCode) {
    this.statusCode = statusCode;
    return this;
  }

  /**
   * HTTP response status code
   * @return statusCode
   */
  @javax.annotation.Nullable
  public Integer getStatusCode() {
    return statusCode;
  }

  public void setStatusCode(@javax.annotation.Nullable Integer statusCode) {
    this.statusCode = statusCode;
  }


  public ServiceDocsSystemStatusGetSingle systemStatus(@javax.annotation.Nullable String systemStatus) {
    this.systemStatus = systemStatus;
    return this;
  }

  /**
   * Get systemStatus
   * @return systemStatus
   */
  @javax.annotation.Nullable
  public String getSystemStatus() {
    return systemStatus;
  }

  public void setSystemStatus(@javax.annotation.Nullable String systemStatus) {
    this.systemStatus = systemStatus;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceDocsSystemStatusGetSingle serviceDocsSystemStatusGetSingle = (ServiceDocsSystemStatusGetSingle) o;
    return Objects.equals(this.data, serviceDocsSystemStatusGetSingle.data) &&
        Objects.equals(this.requestId, serviceDocsSystemStatusGetSingle.requestId) &&
        Objects.equals(this.statusCode, serviceDocsSystemStatusGetSingle.statusCode) &&
        Objects.equals(this.systemStatus, serviceDocsSystemStatusGetSingle.systemStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(data, requestId, statusCode, systemStatus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceDocsSystemStatusGetSingle {\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    statusCode: ").append(toIndentedString(statusCode)).append("\n");
    sb.append("    systemStatus: ").append(toIndentedString(systemStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("data");
    openapiFields.add("request_id");
    openapiFields.add("status_code");
    openapiFields.add("system_status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ServiceDocsSystemStatusGetSingle
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ServiceDocsSystemStatusGetSingle.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ServiceDocsSystemStatusGetSingle is not found in the empty JSON string", ServiceDocsSystemStatusGetSingle.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ServiceDocsSystemStatusGetSingle.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ServiceDocsSystemStatusGetSingle` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `data`
      if (jsonObj.get("data") != null && !jsonObj.get("data").isJsonNull()) {
        ServiceSystemStatusOutput.validateJsonElement(jsonObj.get("data"));
      }
      if ((jsonObj.get("request_id") != null && !jsonObj.get("request_id").isJsonNull()) && !jsonObj.get("request_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `request_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("request_id").toString()));
      }
      if ((jsonObj.get("system_status") != null && !jsonObj.get("system_status").isJsonNull()) && !jsonObj.get("system_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `system_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("system_status").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ServiceDocsSystemStatusGetSingle.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ServiceDocsSystemStatusGetSingle' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ServiceDocsSystemStatusGetSingle> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ServiceDocsSystemStatusGetSingle.class));

       return (TypeAdapter<T>) new TypeAdapter<ServiceDocsSystemStatusGetSingle>() {
           @Override
           public void write(JsonWriter out, ServiceDocsSystemStatusGetSingle value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ServiceDocsSystemStatusGetSingle read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ServiceDocsSystemStatusGetSingle given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ServiceDocsSystemStatusGetSingle
   * @throws IOException if the JSON string is invalid with respect to ServiceDocsSystemStatusGetSingle
   */
  public static ServiceDocsSystemStatusGetSingle fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ServiceDocsSystemStatusGetSingle.class);
  }

  /**
   * Convert an instance of ServiceDocsSystemStatusGetSingle to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

