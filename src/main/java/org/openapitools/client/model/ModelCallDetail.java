/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ModelCallDetail
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class ModelCallDetail {
  public static final String SERIALIZED_NAME_ACCOUNT_ID = "account_id";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  @javax.annotation.Nullable
  private String accountId;

  public static final String SERIALIZED_NAME_CALL_DURATION = "call_duration";
  @SerializedName(SERIALIZED_NAME_CALL_DURATION)
  @javax.annotation.Nullable
  private String callDuration;

  public static final String SERIALIZED_NAME_CALL_ID = "call_id";
  @SerializedName(SERIALIZED_NAME_CALL_ID)
  @javax.annotation.Nullable
  private String callId;

  public static final String SERIALIZED_NAME_CALL_TIME = "call_time";
  @SerializedName(SERIALIZED_NAME_CALL_TIME)
  @javax.annotation.Nullable
  private String callTime;

  public static final String SERIALIZED_NAME_CALL_TYPE = "call_type";
  @SerializedName(SERIALIZED_NAME_CALL_TYPE)
  @javax.annotation.Nullable
  private String callType;

  public static final String SERIALIZED_NAME_CALLEE_NAME = "callee_name";
  @SerializedName(SERIALIZED_NAME_CALLEE_NAME)
  @javax.annotation.Nullable
  private String calleeName;

  public static final String SERIALIZED_NAME_CALLEE_NUMBER = "callee_number";
  @SerializedName(SERIALIZED_NAME_CALLEE_NUMBER)
  @javax.annotation.Nullable
  private String calleeNumber;

  public static final String SERIALIZED_NAME_CALLER_NAME = "caller_name";
  @SerializedName(SERIALIZED_NAME_CALLER_NAME)
  @javax.annotation.Nullable
  private String callerName;

  public static final String SERIALIZED_NAME_CALLER_NUMBER = "caller_number";
  @SerializedName(SERIALIZED_NAME_CALLER_NUMBER)
  @javax.annotation.Nullable
  private String callerNumber;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  @javax.annotation.Nullable
  private String createdAt;

  public ModelCallDetail() {
  }

  public ModelCallDetail accountId(@javax.annotation.Nullable String accountId) {
    this.accountId = accountId;
    return this;
  }

  /**
   * Get accountId
   * @return accountId
   */
  @javax.annotation.Nullable
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(@javax.annotation.Nullable String accountId) {
    this.accountId = accountId;
  }


  public ModelCallDetail callDuration(@javax.annotation.Nullable String callDuration) {
    this.callDuration = callDuration;
    return this;
  }

  /**
   * Get callDuration
   * @return callDuration
   */
  @javax.annotation.Nullable
  public String getCallDuration() {
    return callDuration;
  }

  public void setCallDuration(@javax.annotation.Nullable String callDuration) {
    this.callDuration = callDuration;
  }


  public ModelCallDetail callId(@javax.annotation.Nullable String callId) {
    this.callId = callId;
    return this;
  }

  /**
   * Get callId
   * @return callId
   */
  @javax.annotation.Nullable
  public String getCallId() {
    return callId;
  }

  public void setCallId(@javax.annotation.Nullable String callId) {
    this.callId = callId;
  }


  public ModelCallDetail callTime(@javax.annotation.Nullable String callTime) {
    this.callTime = callTime;
    return this;
  }

  /**
   * Get callTime
   * @return callTime
   */
  @javax.annotation.Nullable
  public String getCallTime() {
    return callTime;
  }

  public void setCallTime(@javax.annotation.Nullable String callTime) {
    this.callTime = callTime;
  }


  public ModelCallDetail callType(@javax.annotation.Nullable String callType) {
    this.callType = callType;
    return this;
  }

  /**
   * Get callType
   * @return callType
   */
  @javax.annotation.Nullable
  public String getCallType() {
    return callType;
  }

  public void setCallType(@javax.annotation.Nullable String callType) {
    this.callType = callType;
  }


  public ModelCallDetail calleeName(@javax.annotation.Nullable String calleeName) {
    this.calleeName = calleeName;
    return this;
  }

  /**
   * Get calleeName
   * @return calleeName
   */
  @javax.annotation.Nullable
  public String getCalleeName() {
    return calleeName;
  }

  public void setCalleeName(@javax.annotation.Nullable String calleeName) {
    this.calleeName = calleeName;
  }


  public ModelCallDetail calleeNumber(@javax.annotation.Nullable String calleeNumber) {
    this.calleeNumber = calleeNumber;
    return this;
  }

  /**
   * Get calleeNumber
   * @return calleeNumber
   */
  @javax.annotation.Nullable
  public String getCalleeNumber() {
    return calleeNumber;
  }

  public void setCalleeNumber(@javax.annotation.Nullable String calleeNumber) {
    this.calleeNumber = calleeNumber;
  }


  public ModelCallDetail callerName(@javax.annotation.Nullable String callerName) {
    this.callerName = callerName;
    return this;
  }

  /**
   * Get callerName
   * @return callerName
   */
  @javax.annotation.Nullable
  public String getCallerName() {
    return callerName;
  }

  public void setCallerName(@javax.annotation.Nullable String callerName) {
    this.callerName = callerName;
  }


  public ModelCallDetail callerNumber(@javax.annotation.Nullable String callerNumber) {
    this.callerNumber = callerNumber;
    return this;
  }

  /**
   * Get callerNumber
   * @return callerNumber
   */
  @javax.annotation.Nullable
  public String getCallerNumber() {
    return callerNumber;
  }

  public void setCallerNumber(@javax.annotation.Nullable String callerNumber) {
    this.callerNumber = callerNumber;
  }


  public ModelCallDetail createdAt(@javax.annotation.Nullable String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(@javax.annotation.Nullable String createdAt) {
    this.createdAt = createdAt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelCallDetail modelCallDetail = (ModelCallDetail) o;
    return Objects.equals(this.accountId, modelCallDetail.accountId) &&
        Objects.equals(this.callDuration, modelCallDetail.callDuration) &&
        Objects.equals(this.callId, modelCallDetail.callId) &&
        Objects.equals(this.callTime, modelCallDetail.callTime) &&
        Objects.equals(this.callType, modelCallDetail.callType) &&
        Objects.equals(this.calleeName, modelCallDetail.calleeName) &&
        Objects.equals(this.calleeNumber, modelCallDetail.calleeNumber) &&
        Objects.equals(this.callerName, modelCallDetail.callerName) &&
        Objects.equals(this.callerNumber, modelCallDetail.callerNumber) &&
        Objects.equals(this.createdAt, modelCallDetail.createdAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, callDuration, callId, callTime, callType, calleeName, calleeNumber, callerName, callerNumber, createdAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelCallDetail {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    callDuration: ").append(toIndentedString(callDuration)).append("\n");
    sb.append("    callId: ").append(toIndentedString(callId)).append("\n");
    sb.append("    callTime: ").append(toIndentedString(callTime)).append("\n");
    sb.append("    callType: ").append(toIndentedString(callType)).append("\n");
    sb.append("    calleeName: ").append(toIndentedString(calleeName)).append("\n");
    sb.append("    calleeNumber: ").append(toIndentedString(calleeNumber)).append("\n");
    sb.append("    callerName: ").append(toIndentedString(callerName)).append("\n");
    sb.append("    callerNumber: ").append(toIndentedString(callerNumber)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("account_id", "call_duration", "call_id", "call_time", "call_type", "callee_name", "callee_number", "caller_name", "caller_number", "created_at"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ModelCallDetail
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModelCallDetail.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModelCallDetail is not found in the empty JSON string", ModelCallDetail.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModelCallDetail.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModelCallDetail` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_id") != null && !jsonObj.get("account_id").isJsonNull()) && !jsonObj.get("account_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_id").toString()));
      }
      if ((jsonObj.get("call_duration") != null && !jsonObj.get("call_duration").isJsonNull()) && !jsonObj.get("call_duration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `call_duration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("call_duration").toString()));
      }
      if ((jsonObj.get("call_id") != null && !jsonObj.get("call_id").isJsonNull()) && !jsonObj.get("call_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `call_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("call_id").toString()));
      }
      if ((jsonObj.get("call_time") != null && !jsonObj.get("call_time").isJsonNull()) && !jsonObj.get("call_time").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `call_time` to be a primitive type in the JSON string but got `%s`", jsonObj.get("call_time").toString()));
      }
      if ((jsonObj.get("call_type") != null && !jsonObj.get("call_type").isJsonNull()) && !jsonObj.get("call_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `call_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("call_type").toString()));
      }
      if ((jsonObj.get("callee_name") != null && !jsonObj.get("callee_name").isJsonNull()) && !jsonObj.get("callee_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `callee_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("callee_name").toString()));
      }
      if ((jsonObj.get("callee_number") != null && !jsonObj.get("callee_number").isJsonNull()) && !jsonObj.get("callee_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `callee_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("callee_number").toString()));
      }
      if ((jsonObj.get("caller_name") != null && !jsonObj.get("caller_name").isJsonNull()) && !jsonObj.get("caller_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `caller_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("caller_name").toString()));
      }
      if ((jsonObj.get("caller_number") != null && !jsonObj.get("caller_number").isJsonNull()) && !jsonObj.get("caller_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `caller_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("caller_number").toString()));
      }
      if ((jsonObj.get("created_at") != null && !jsonObj.get("created_at").isJsonNull()) && !jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModelCallDetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModelCallDetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModelCallDetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModelCallDetail.class));

       return (TypeAdapter<T>) new TypeAdapter<ModelCallDetail>() {
           @Override
           public void write(JsonWriter out, ModelCallDetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModelCallDetail read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ModelCallDetail given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ModelCallDetail
   * @throws IOException if the JSON string is invalid with respect to ModelCallDetail
   */
  public static ModelCallDetail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModelCallDetail.class);
  }

  /**
   * Convert an instance of ModelCallDetail to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

