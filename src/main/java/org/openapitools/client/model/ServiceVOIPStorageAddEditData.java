/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.ServiceStoragePlan;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ServiceVOIPStorageAddEditData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class ServiceVOIPStorageAddEditData {
  public static final String SERIALIZED_NAME_ATTACHMENTS = "attachments";
  @SerializedName(SERIALIZED_NAME_ATTACHMENTS)
  @javax.annotation.Nullable
  private Map<String, Object> attachments = new HashMap<>();

  public static final String SERIALIZED_NAME_CONNECTIONS = "connections";
  @SerializedName(SERIALIZED_NAME_CONNECTIONS)
  @javax.annotation.Nullable
  private Map<String, Object> connections = new HashMap<>();

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private String id;

  public static final String SERIALIZED_NAME_PLAN = "plan";
  @SerializedName(SERIALIZED_NAME_PLAN)
  @javax.annotation.Nullable
  private ServiceStoragePlan plan;

  public ServiceVOIPStorageAddEditData() {
  }

  public ServiceVOIPStorageAddEditData attachments(@javax.annotation.Nullable Map<String, Object> attachments) {
    this.attachments = attachments;
    return this;
  }

  public ServiceVOIPStorageAddEditData putAttachmentsItem(String key, Object attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new HashMap<>();
    }
    this.attachments.put(key, attachmentsItem);
    return this;
  }

  /**
   * Get attachments
   * @return attachments
   */
  @javax.annotation.Nullable
  public Map<String, Object> getAttachments() {
    return attachments;
  }

  public void setAttachments(@javax.annotation.Nullable Map<String, Object> attachments) {
    this.attachments = attachments;
  }


  public ServiceVOIPStorageAddEditData connections(@javax.annotation.Nullable Map<String, Object> connections) {
    this.connections = connections;
    return this;
  }

  public ServiceVOIPStorageAddEditData putConnectionsItem(String key, Object connectionsItem) {
    if (this.connections == null) {
      this.connections = new HashMap<>();
    }
    this.connections.put(key, connectionsItem);
    return this;
  }

  /**
   * Get connections
   * @return connections
   */
  @javax.annotation.Nullable
  public Map<String, Object> getConnections() {
    return connections;
  }

  public void setConnections(@javax.annotation.Nullable Map<String, Object> connections) {
    this.connections = connections;
  }


  public ServiceVOIPStorageAddEditData id(@javax.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }


  public ServiceVOIPStorageAddEditData plan(@javax.annotation.Nullable ServiceStoragePlan plan) {
    this.plan = plan;
    return this;
  }

  /**
   * Get plan
   * @return plan
   */
  @javax.annotation.Nullable
  public ServiceStoragePlan getPlan() {
    return plan;
  }

  public void setPlan(@javax.annotation.Nullable ServiceStoragePlan plan) {
    this.plan = plan;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceVOIPStorageAddEditData serviceVOIPStorageAddEditData = (ServiceVOIPStorageAddEditData) o;
    return Objects.equals(this.attachments, serviceVOIPStorageAddEditData.attachments) &&
        Objects.equals(this.connections, serviceVOIPStorageAddEditData.connections) &&
        Objects.equals(this.id, serviceVOIPStorageAddEditData.id) &&
        Objects.equals(this.plan, serviceVOIPStorageAddEditData.plan);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attachments, connections, id, plan);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceVOIPStorageAddEditData {\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    connections: ").append(toIndentedString(connections)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    plan: ").append(toIndentedString(plan)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("attachments");
    openapiFields.add("connections");
    openapiFields.add("id");
    openapiFields.add("plan");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ServiceVOIPStorageAddEditData
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ServiceVOIPStorageAddEditData.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ServiceVOIPStorageAddEditData is not found in the empty JSON string", ServiceVOIPStorageAddEditData.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ServiceVOIPStorageAddEditData.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ServiceVOIPStorageAddEditData` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the optional field `plan`
      if (jsonObj.get("plan") != null && !jsonObj.get("plan").isJsonNull()) {
        ServiceStoragePlan.validateJsonElement(jsonObj.get("plan"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ServiceVOIPStorageAddEditData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ServiceVOIPStorageAddEditData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ServiceVOIPStorageAddEditData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ServiceVOIPStorageAddEditData.class));

       return (TypeAdapter<T>) new TypeAdapter<ServiceVOIPStorageAddEditData>() {
           @Override
           public void write(JsonWriter out, ServiceVOIPStorageAddEditData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ServiceVOIPStorageAddEditData read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ServiceVOIPStorageAddEditData given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ServiceVOIPStorageAddEditData
   * @throws IOException if the JSON string is invalid with respect to ServiceVOIPStorageAddEditData
   */
  public static ServiceVOIPStorageAddEditData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ServiceVOIPStorageAddEditData.class);
  }

  /**
   * Convert an instance of ServiceVOIPStorageAddEditData to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

