/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ServiceCampaignImportOutputMnoStatusListInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ServiceCampaignImportOutput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class ServiceCampaignImportOutput {
  public static final String SERIALIZED_NAME_CAMPAIGN_ID = "campaign_id";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_ID)
  @javax.annotation.Nullable
  private String campaignId;

  public static final String SERIALIZED_NAME_CREATED_DATE = "created_date";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  @javax.annotation.Nullable
  private String createdDate;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;

  public static final String SERIALIZED_NAME_MESSAGE_CLASS = "message_class";
  @SerializedName(SERIALIZED_NAME_MESSAGE_CLASS)
  @javax.annotation.Nullable
  private String messageClass;

  public static final String SERIALIZED_NAME_MNO_STATUS_LIST = "mno_status_list";
  @SerializedName(SERIALIZED_NAME_MNO_STATUS_LIST)
  @javax.annotation.Nullable
  private List<ServiceCampaignImportOutputMnoStatusListInner> mnoStatusList = new ArrayList<>();

  public static final String SERIALIZED_NAME_SECONDARY_DCA_SHARING_STATUS = "secondary_dca_sharing_status";
  @SerializedName(SERIALIZED_NAME_SECONDARY_DCA_SHARING_STATUS)
  @javax.annotation.Nullable
  private String secondaryDcaSharingStatus;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  @javax.annotation.Nullable
  private String status;

  public ServiceCampaignImportOutput() {
  }

  public ServiceCampaignImportOutput campaignId(@javax.annotation.Nullable String campaignId) {
    this.campaignId = campaignId;
    return this;
  }

  /**
   * Get campaignId
   * @return campaignId
   */
  @javax.annotation.Nullable
  public String getCampaignId() {
    return campaignId;
  }

  public void setCampaignId(@javax.annotation.Nullable String campaignId) {
    this.campaignId = campaignId;
  }


  public ServiceCampaignImportOutput createdDate(@javax.annotation.Nullable String createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * Get createdDate
   * @return createdDate
   */
  @javax.annotation.Nullable
  public String getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(@javax.annotation.Nullable String createdDate) {
    this.createdDate = createdDate;
  }


  public ServiceCampaignImportOutput description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public ServiceCampaignImportOutput messageClass(@javax.annotation.Nullable String messageClass) {
    this.messageClass = messageClass;
    return this;
  }

  /**
   * Get messageClass
   * @return messageClass
   */
  @javax.annotation.Nullable
  public String getMessageClass() {
    return messageClass;
  }

  public void setMessageClass(@javax.annotation.Nullable String messageClass) {
    this.messageClass = messageClass;
  }


  public ServiceCampaignImportOutput mnoStatusList(@javax.annotation.Nullable List<ServiceCampaignImportOutputMnoStatusListInner> mnoStatusList) {
    this.mnoStatusList = mnoStatusList;
    return this;
  }

  public ServiceCampaignImportOutput addMnoStatusListItem(ServiceCampaignImportOutputMnoStatusListInner mnoStatusListItem) {
    if (this.mnoStatusList == null) {
      this.mnoStatusList = new ArrayList<>();
    }
    this.mnoStatusList.add(mnoStatusListItem);
    return this;
  }

  /**
   * Get mnoStatusList
   * @return mnoStatusList
   */
  @javax.annotation.Nullable
  public List<ServiceCampaignImportOutputMnoStatusListInner> getMnoStatusList() {
    return mnoStatusList;
  }

  public void setMnoStatusList(@javax.annotation.Nullable List<ServiceCampaignImportOutputMnoStatusListInner> mnoStatusList) {
    this.mnoStatusList = mnoStatusList;
  }


  public ServiceCampaignImportOutput secondaryDcaSharingStatus(@javax.annotation.Nullable String secondaryDcaSharingStatus) {
    this.secondaryDcaSharingStatus = secondaryDcaSharingStatus;
    return this;
  }

  /**
   * Get secondaryDcaSharingStatus
   * @return secondaryDcaSharingStatus
   */
  @javax.annotation.Nullable
  public String getSecondaryDcaSharingStatus() {
    return secondaryDcaSharingStatus;
  }

  public void setSecondaryDcaSharingStatus(@javax.annotation.Nullable String secondaryDcaSharingStatus) {
    this.secondaryDcaSharingStatus = secondaryDcaSharingStatus;
  }


  public ServiceCampaignImportOutput status(@javax.annotation.Nullable String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(@javax.annotation.Nullable String status) {
    this.status = status;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceCampaignImportOutput serviceCampaignImportOutput = (ServiceCampaignImportOutput) o;
    return Objects.equals(this.campaignId, serviceCampaignImportOutput.campaignId) &&
        Objects.equals(this.createdDate, serviceCampaignImportOutput.createdDate) &&
        Objects.equals(this.description, serviceCampaignImportOutput.description) &&
        Objects.equals(this.messageClass, serviceCampaignImportOutput.messageClass) &&
        Objects.equals(this.mnoStatusList, serviceCampaignImportOutput.mnoStatusList) &&
        Objects.equals(this.secondaryDcaSharingStatus, serviceCampaignImportOutput.secondaryDcaSharingStatus) &&
        Objects.equals(this.status, serviceCampaignImportOutput.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(campaignId, createdDate, description, messageClass, mnoStatusList, secondaryDcaSharingStatus, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceCampaignImportOutput {\n");
    sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    messageClass: ").append(toIndentedString(messageClass)).append("\n");
    sb.append("    mnoStatusList: ").append(toIndentedString(mnoStatusList)).append("\n");
    sb.append("    secondaryDcaSharingStatus: ").append(toIndentedString(secondaryDcaSharingStatus)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("campaign_id", "created_date", "description", "message_class", "mno_status_list", "secondary_dca_sharing_status", "status"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ServiceCampaignImportOutput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ServiceCampaignImportOutput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ServiceCampaignImportOutput is not found in the empty JSON string", ServiceCampaignImportOutput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ServiceCampaignImportOutput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ServiceCampaignImportOutput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("campaign_id") != null && !jsonObj.get("campaign_id").isJsonNull()) && !jsonObj.get("campaign_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `campaign_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("campaign_id").toString()));
      }
      if ((jsonObj.get("created_date") != null && !jsonObj.get("created_date").isJsonNull()) && !jsonObj.get("created_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_date").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("message_class") != null && !jsonObj.get("message_class").isJsonNull()) && !jsonObj.get("message_class").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `message_class` to be a primitive type in the JSON string but got `%s`", jsonObj.get("message_class").toString()));
      }
      if (jsonObj.get("mno_status_list") != null && !jsonObj.get("mno_status_list").isJsonNull()) {
        JsonArray jsonArraymnoStatusList = jsonObj.getAsJsonArray("mno_status_list");
        if (jsonArraymnoStatusList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("mno_status_list").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `mno_status_list` to be an array in the JSON string but got `%s`", jsonObj.get("mno_status_list").toString()));
          }

          // validate the optional field `mno_status_list` (array)
          for (int i = 0; i < jsonArraymnoStatusList.size(); i++) {
            ServiceCampaignImportOutputMnoStatusListInner.validateJsonElement(jsonArraymnoStatusList.get(i));
          };
        }
      }
      if ((jsonObj.get("secondary_dca_sharing_status") != null && !jsonObj.get("secondary_dca_sharing_status").isJsonNull()) && !jsonObj.get("secondary_dca_sharing_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `secondary_dca_sharing_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("secondary_dca_sharing_status").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ServiceCampaignImportOutput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ServiceCampaignImportOutput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ServiceCampaignImportOutput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ServiceCampaignImportOutput.class));

       return (TypeAdapter<T>) new TypeAdapter<ServiceCampaignImportOutput>() {
           @Override
           public void write(JsonWriter out, ServiceCampaignImportOutput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ServiceCampaignImportOutput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ServiceCampaignImportOutput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ServiceCampaignImportOutput
   * @throws IOException if the JSON string is invalid with respect to ServiceCampaignImportOutput
   */
  public static ServiceCampaignImportOutput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ServiceCampaignImportOutput.class);
  }

  /**
   * Convert an instance of ServiceCampaignImportOutput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

