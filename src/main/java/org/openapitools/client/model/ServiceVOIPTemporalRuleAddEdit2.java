/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ServiceVOIPTemporalRuleAddEdit2
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class ServiceVOIPTemporalRuleAddEdit2 {
  /**
   * Gets or Sets cycle
   */
  @JsonAdapter(CycleEnum.Adapter.class)
  public enum CycleEnum {
    DATE("date"),
    
    DAILY("daily"),
    
    WEEKLY("weekly"),
    
    MONTHLY("monthly"),
    
    YEARLY("yearly");

    private String value;

    CycleEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CycleEnum fromValue(String value) {
      for (CycleEnum b : CycleEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CycleEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CycleEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CycleEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CycleEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      CycleEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_CYCLE = "cycle";
  @SerializedName(SERIALIZED_NAME_CYCLE)
  @javax.annotation.Nonnull
  private CycleEnum cycle;

  public static final String SERIALIZED_NAME_DAYS = "days";
  @SerializedName(SERIALIZED_NAME_DAYS)
  @javax.annotation.Nullable
  private List<Integer> days = new ArrayList<>();

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  @javax.annotation.Nullable
  private Boolean enabled;

  public static final String SERIALIZED_NAME_INTERVAL = "interval";
  @SerializedName(SERIALIZED_NAME_INTERVAL)
  @javax.annotation.Nullable
  private Integer interval;

  public static final String SERIALIZED_NAME_MONTH = "month";
  @SerializedName(SERIALIZED_NAME_MONTH)
  @javax.annotation.Nullable
  private Integer month;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nonnull
  private String name;

  /**
   * Gets or Sets ordinal
   */
  @JsonAdapter(OrdinalEnum.Adapter.class)
  public enum OrdinalEnum {
    EVERY("every"),
    
    FIRST("first"),
    
    SECOND("second"),
    
    THIRD("third"),
    
    FOURTH("fourth"),
    
    FIFTH("fifth"),
    
    LAST("last");

    private String value;

    OrdinalEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OrdinalEnum fromValue(String value) {
      for (OrdinalEnum b : OrdinalEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<OrdinalEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OrdinalEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OrdinalEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return OrdinalEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      OrdinalEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ORDINAL = "ordinal";
  @SerializedName(SERIALIZED_NAME_ORDINAL)
  @javax.annotation.Nullable
  private OrdinalEnum ordinal;

  public static final String SERIALIZED_NAME_START_DATE = "start_date";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  @javax.annotation.Nullable
  private Integer startDate;

  public static final String SERIALIZED_NAME_START_DATE_REQ = "start_date_req";
  @SerializedName(SERIALIZED_NAME_START_DATE_REQ)
  @javax.annotation.Nullable
  private String startDateReq;

  public static final String SERIALIZED_NAME_TIME_WINDOW_START = "time_window_start";
  @SerializedName(SERIALIZED_NAME_TIME_WINDOW_START)
  @javax.annotation.Nullable
  private Integer timeWindowStart;

  public static final String SERIALIZED_NAME_TIME_WINDOW_START_REQ = "time_window_start_req";
  @SerializedName(SERIALIZED_NAME_TIME_WINDOW_START_REQ)
  @javax.annotation.Nullable
  private String timeWindowStartReq;

  public static final String SERIALIZED_NAME_TIME_WINDOW_STOP = "time_window_stop";
  @SerializedName(SERIALIZED_NAME_TIME_WINDOW_STOP)
  @javax.annotation.Nullable
  private Integer timeWindowStop;

  public static final String SERIALIZED_NAME_TIME_WINDOW_STOP_REQ = "time_window_stop_req";
  @SerializedName(SERIALIZED_NAME_TIME_WINDOW_STOP_REQ)
  @javax.annotation.Nullable
  private String timeWindowStopReq;

  public static final String SERIALIZED_NAME_WDAYS = "wdays";
  @SerializedName(SERIALIZED_NAME_WDAYS)
  @javax.annotation.Nullable
  private List<String> wdays = new ArrayList<>();

  public ServiceVOIPTemporalRuleAddEdit2() {
  }

  public ServiceVOIPTemporalRuleAddEdit2 cycle(@javax.annotation.Nonnull CycleEnum cycle) {
    this.cycle = cycle;
    return this;
  }

  /**
   * Get cycle
   * @return cycle
   */
  @javax.annotation.Nonnull
  public CycleEnum getCycle() {
    return cycle;
  }

  public void setCycle(@javax.annotation.Nonnull CycleEnum cycle) {
    this.cycle = cycle;
  }


  public ServiceVOIPTemporalRuleAddEdit2 days(@javax.annotation.Nullable List<Integer> days) {
    this.days = days;
    return this;
  }

  public ServiceVOIPTemporalRuleAddEdit2 addDaysItem(Integer daysItem) {
    if (this.days == null) {
      this.days = new ArrayList<>();
    }
    this.days.add(daysItem);
    return this;
  }

  /**
   * Get days
   * @return days
   */
  @javax.annotation.Nullable
  public List<Integer> getDays() {
    return days;
  }

  public void setDays(@javax.annotation.Nullable List<Integer> days) {
    this.days = days;
  }


  public ServiceVOIPTemporalRuleAddEdit2 enabled(@javax.annotation.Nullable Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Get enabled
   * @return enabled
   */
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(@javax.annotation.Nullable Boolean enabled) {
    this.enabled = enabled;
  }


  public ServiceVOIPTemporalRuleAddEdit2 interval(@javax.annotation.Nullable Integer interval) {
    this.interval = interval;
    return this;
  }

  /**
   * Get interval
   * minimum: 1
   * @return interval
   */
  @javax.annotation.Nullable
  public Integer getInterval() {
    return interval;
  }

  public void setInterval(@javax.annotation.Nullable Integer interval) {
    this.interval = interval;
  }


  public ServiceVOIPTemporalRuleAddEdit2 month(@javax.annotation.Nullable Integer month) {
    this.month = month;
    return this;
  }

  /**
   * Get month
   * minimum: 1
   * maximum: 12
   * @return month
   */
  @javax.annotation.Nullable
  public Integer getMonth() {
    return month;
  }

  public void setMonth(@javax.annotation.Nullable Integer month) {
    this.month = month;
  }


  public ServiceVOIPTemporalRuleAddEdit2 name(@javax.annotation.Nonnull String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nonnull String name) {
    this.name = name;
  }


  public ServiceVOIPTemporalRuleAddEdit2 ordinal(@javax.annotation.Nullable OrdinalEnum ordinal) {
    this.ordinal = ordinal;
    return this;
  }

  /**
   * Get ordinal
   * @return ordinal
   */
  @javax.annotation.Nullable
  public OrdinalEnum getOrdinal() {
    return ordinal;
  }

  public void setOrdinal(@javax.annotation.Nullable OrdinalEnum ordinal) {
    this.ordinal = ordinal;
  }


  public ServiceVOIPTemporalRuleAddEdit2 startDate(@javax.annotation.Nullable Integer startDate) {
    this.startDate = startDate;
    return this;
  }

  /**
   * Get startDate
   * @return startDate
   */
  @javax.annotation.Nullable
  public Integer getStartDate() {
    return startDate;
  }

  public void setStartDate(@javax.annotation.Nullable Integer startDate) {
    this.startDate = startDate;
  }


  public ServiceVOIPTemporalRuleAddEdit2 startDateReq(@javax.annotation.Nullable String startDateReq) {
    this.startDateReq = startDateReq;
    return this;
  }

  /**
   * Get startDateReq
   * @return startDateReq
   */
  @javax.annotation.Nullable
  public String getStartDateReq() {
    return startDateReq;
  }

  public void setStartDateReq(@javax.annotation.Nullable String startDateReq) {
    this.startDateReq = startDateReq;
  }


  public ServiceVOIPTemporalRuleAddEdit2 timeWindowStart(@javax.annotation.Nullable Integer timeWindowStart) {
    this.timeWindowStart = timeWindowStart;
    return this;
  }

  /**
   * Get timeWindowStart
   * minimum: 0
   * maximum: 86400
   * @return timeWindowStart
   */
  @javax.annotation.Nullable
  public Integer getTimeWindowStart() {
    return timeWindowStart;
  }

  public void setTimeWindowStart(@javax.annotation.Nullable Integer timeWindowStart) {
    this.timeWindowStart = timeWindowStart;
  }


  public ServiceVOIPTemporalRuleAddEdit2 timeWindowStartReq(@javax.annotation.Nullable String timeWindowStartReq) {
    this.timeWindowStartReq = timeWindowStartReq;
    return this;
  }

  /**
   * Get timeWindowStartReq
   * @return timeWindowStartReq
   */
  @javax.annotation.Nullable
  public String getTimeWindowStartReq() {
    return timeWindowStartReq;
  }

  public void setTimeWindowStartReq(@javax.annotation.Nullable String timeWindowStartReq) {
    this.timeWindowStartReq = timeWindowStartReq;
  }


  public ServiceVOIPTemporalRuleAddEdit2 timeWindowStop(@javax.annotation.Nullable Integer timeWindowStop) {
    this.timeWindowStop = timeWindowStop;
    return this;
  }

  /**
   * Get timeWindowStop
   * minimum: 0
   * maximum: 86400
   * @return timeWindowStop
   */
  @javax.annotation.Nullable
  public Integer getTimeWindowStop() {
    return timeWindowStop;
  }

  public void setTimeWindowStop(@javax.annotation.Nullable Integer timeWindowStop) {
    this.timeWindowStop = timeWindowStop;
  }


  public ServiceVOIPTemporalRuleAddEdit2 timeWindowStopReq(@javax.annotation.Nullable String timeWindowStopReq) {
    this.timeWindowStopReq = timeWindowStopReq;
    return this;
  }

  /**
   * Get timeWindowStopReq
   * @return timeWindowStopReq
   */
  @javax.annotation.Nullable
  public String getTimeWindowStopReq() {
    return timeWindowStopReq;
  }

  public void setTimeWindowStopReq(@javax.annotation.Nullable String timeWindowStopReq) {
    this.timeWindowStopReq = timeWindowStopReq;
  }


  public ServiceVOIPTemporalRuleAddEdit2 wdays(@javax.annotation.Nullable List<String> wdays) {
    this.wdays = wdays;
    return this;
  }

  public ServiceVOIPTemporalRuleAddEdit2 addWdaysItem(String wdaysItem) {
    if (this.wdays == null) {
      this.wdays = new ArrayList<>();
    }
    this.wdays.add(wdaysItem);
    return this;
  }

  /**
   * Get wdays
   * @return wdays
   */
  @javax.annotation.Nullable
  public List<String> getWdays() {
    return wdays;
  }

  public void setWdays(@javax.annotation.Nullable List<String> wdays) {
    this.wdays = wdays;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceVOIPTemporalRuleAddEdit2 serviceVOIPTemporalRuleAddEdit2 = (ServiceVOIPTemporalRuleAddEdit2) o;
    return Objects.equals(this.cycle, serviceVOIPTemporalRuleAddEdit2.cycle) &&
        Objects.equals(this.days, serviceVOIPTemporalRuleAddEdit2.days) &&
        Objects.equals(this.enabled, serviceVOIPTemporalRuleAddEdit2.enabled) &&
        Objects.equals(this.interval, serviceVOIPTemporalRuleAddEdit2.interval) &&
        Objects.equals(this.month, serviceVOIPTemporalRuleAddEdit2.month) &&
        Objects.equals(this.name, serviceVOIPTemporalRuleAddEdit2.name) &&
        Objects.equals(this.ordinal, serviceVOIPTemporalRuleAddEdit2.ordinal) &&
        Objects.equals(this.startDate, serviceVOIPTemporalRuleAddEdit2.startDate) &&
        Objects.equals(this.startDateReq, serviceVOIPTemporalRuleAddEdit2.startDateReq) &&
        Objects.equals(this.timeWindowStart, serviceVOIPTemporalRuleAddEdit2.timeWindowStart) &&
        Objects.equals(this.timeWindowStartReq, serviceVOIPTemporalRuleAddEdit2.timeWindowStartReq) &&
        Objects.equals(this.timeWindowStop, serviceVOIPTemporalRuleAddEdit2.timeWindowStop) &&
        Objects.equals(this.timeWindowStopReq, serviceVOIPTemporalRuleAddEdit2.timeWindowStopReq) &&
        Objects.equals(this.wdays, serviceVOIPTemporalRuleAddEdit2.wdays);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cycle, days, enabled, interval, month, name, ordinal, startDate, startDateReq, timeWindowStart, timeWindowStartReq, timeWindowStop, timeWindowStopReq, wdays);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceVOIPTemporalRuleAddEdit2 {\n");
    sb.append("    cycle: ").append(toIndentedString(cycle)).append("\n");
    sb.append("    days: ").append(toIndentedString(days)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    interval: ").append(toIndentedString(interval)).append("\n");
    sb.append("    month: ").append(toIndentedString(month)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ordinal: ").append(toIndentedString(ordinal)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    startDateReq: ").append(toIndentedString(startDateReq)).append("\n");
    sb.append("    timeWindowStart: ").append(toIndentedString(timeWindowStart)).append("\n");
    sb.append("    timeWindowStartReq: ").append(toIndentedString(timeWindowStartReq)).append("\n");
    sb.append("    timeWindowStop: ").append(toIndentedString(timeWindowStop)).append("\n");
    sb.append("    timeWindowStopReq: ").append(toIndentedString(timeWindowStopReq)).append("\n");
    sb.append("    wdays: ").append(toIndentedString(wdays)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cycle");
    openapiFields.add("days");
    openapiFields.add("enabled");
    openapiFields.add("interval");
    openapiFields.add("month");
    openapiFields.add("name");
    openapiFields.add("ordinal");
    openapiFields.add("start_date");
    openapiFields.add("start_date_req");
    openapiFields.add("time_window_start");
    openapiFields.add("time_window_start_req");
    openapiFields.add("time_window_stop");
    openapiFields.add("time_window_stop_req");
    openapiFields.add("wdays");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("cycle");
    openapiRequiredFields.add("name");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ServiceVOIPTemporalRuleAddEdit2
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ServiceVOIPTemporalRuleAddEdit2.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ServiceVOIPTemporalRuleAddEdit2 is not found in the empty JSON string", ServiceVOIPTemporalRuleAddEdit2.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ServiceVOIPTemporalRuleAddEdit2.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ServiceVOIPTemporalRuleAddEdit2` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ServiceVOIPTemporalRuleAddEdit2.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("cycle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cycle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cycle").toString()));
      }
      // validate the required field `cycle`
      CycleEnum.validateJsonElement(jsonObj.get("cycle"));
      // ensure the optional json data is an array if present
      if (jsonObj.get("days") != null && !jsonObj.get("days").isJsonNull() && !jsonObj.get("days").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `days` to be an array in the JSON string but got `%s`", jsonObj.get("days").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("ordinal") != null && !jsonObj.get("ordinal").isJsonNull()) && !jsonObj.get("ordinal").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ordinal` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ordinal").toString()));
      }
      // validate the optional field `ordinal`
      if (jsonObj.get("ordinal") != null && !jsonObj.get("ordinal").isJsonNull()) {
        OrdinalEnum.validateJsonElement(jsonObj.get("ordinal"));
      }
      if ((jsonObj.get("start_date_req") != null && !jsonObj.get("start_date_req").isJsonNull()) && !jsonObj.get("start_date_req").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `start_date_req` to be a primitive type in the JSON string but got `%s`", jsonObj.get("start_date_req").toString()));
      }
      if ((jsonObj.get("time_window_start_req") != null && !jsonObj.get("time_window_start_req").isJsonNull()) && !jsonObj.get("time_window_start_req").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `time_window_start_req` to be a primitive type in the JSON string but got `%s`", jsonObj.get("time_window_start_req").toString()));
      }
      if ((jsonObj.get("time_window_stop_req") != null && !jsonObj.get("time_window_stop_req").isJsonNull()) && !jsonObj.get("time_window_stop_req").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `time_window_stop_req` to be a primitive type in the JSON string but got `%s`", jsonObj.get("time_window_stop_req").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("wdays") != null && !jsonObj.get("wdays").isJsonNull() && !jsonObj.get("wdays").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `wdays` to be an array in the JSON string but got `%s`", jsonObj.get("wdays").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ServiceVOIPTemporalRuleAddEdit2.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ServiceVOIPTemporalRuleAddEdit2' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ServiceVOIPTemporalRuleAddEdit2> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ServiceVOIPTemporalRuleAddEdit2.class));

       return (TypeAdapter<T>) new TypeAdapter<ServiceVOIPTemporalRuleAddEdit2>() {
           @Override
           public void write(JsonWriter out, ServiceVOIPTemporalRuleAddEdit2 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ServiceVOIPTemporalRuleAddEdit2 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ServiceVOIPTemporalRuleAddEdit2 given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ServiceVOIPTemporalRuleAddEdit2
   * @throws IOException if the JSON string is invalid with respect to ServiceVOIPTemporalRuleAddEdit2
   */
  public static ServiceVOIPTemporalRuleAddEdit2 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ServiceVOIPTemporalRuleAddEdit2.class);
  }

  /**
   * Convert an instance of ServiceVOIPTemporalRuleAddEdit2 to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

