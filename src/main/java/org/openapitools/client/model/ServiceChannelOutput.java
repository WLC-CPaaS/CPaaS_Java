/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ServiceChannelOutput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class ServiceChannelOutput {
  public static final String SERIALIZED_NAME_ANSWERED = "answered";
  @SerializedName(SERIALIZED_NAME_ANSWERED)
  @javax.annotation.Nullable
  private Boolean answered;

  public static final String SERIALIZED_NAME_AUTHORIZING_ID = "authorizing_id";
  @SerializedName(SERIALIZED_NAME_AUTHORIZING_ID)
  @javax.annotation.Nullable
  private String authorizingId;

  public static final String SERIALIZED_NAME_AUTHORIZING_TYPE = "authorizing_type";
  @SerializedName(SERIALIZED_NAME_AUTHORIZING_TYPE)
  @javax.annotation.Nullable
  private String authorizingType;

  public static final String SERIALIZED_NAME_CALLFLOW_ID = "callflow_id";
  @SerializedName(SERIALIZED_NAME_CALLFLOW_ID)
  @javax.annotation.Nullable
  private String callflowId;

  public static final String SERIALIZED_NAME_CHANNEL_AUTHORIZED = "channel_authorized";
  @SerializedName(SERIALIZED_NAME_CHANNEL_AUTHORIZED)
  @javax.annotation.Nullable
  private Boolean channelAuthorized;

  public static final String SERIALIZED_NAME_CUSTOM_APPLICATION_VARS = "custom_application_vars";
  @SerializedName(SERIALIZED_NAME_CUSTOM_APPLICATION_VARS)
  @javax.annotation.Nullable
  private Map<String, Object> customApplicationVars = new HashMap<>();

  public static final String SERIALIZED_NAME_CUSTOM_AUTH_HEADERS = "custom_auth_headers";
  @SerializedName(SERIALIZED_NAME_CUSTOM_AUTH_HEADERS)
  @javax.annotation.Nullable
  private Map<String, Object> customAuthHeaders = new HashMap<>();

  public static final String SERIALIZED_NAME_CUSTOM_CHANNEL_VARS = "custom_channel_vars";
  @SerializedName(SERIALIZED_NAME_CUSTOM_CHANNEL_VARS)
  @javax.annotation.Nullable
  private Map<String, Object> customChannelVars = new HashMap<>();

  public static final String SERIALIZED_NAME_CUSTOM_SIP_HEADERS = "custom_sip_headers";
  @SerializedName(SERIALIZED_NAME_CUSTOM_SIP_HEADERS)
  @javax.annotation.Nullable
  private Map<String, Object> customSipHeaders = new HashMap<>();

  public static final String SERIALIZED_NAME_DESTINATION = "destination";
  @SerializedName(SERIALIZED_NAME_DESTINATION)
  @javax.annotation.Nullable
  private String destination;

  public static final String SERIALIZED_NAME_DIRECTION = "direction";
  @SerializedName(SERIALIZED_NAME_DIRECTION)
  @javax.annotation.Nullable
  private String direction;

  public static final String SERIALIZED_NAME_ELAPSED_S = "elapsed_s";
  @SerializedName(SERIALIZED_NAME_ELAPSED_S)
  @javax.annotation.Nullable
  private Integer elapsedS;

  public static final String SERIALIZED_NAME_FROM_TAG = "from_tag";
  @SerializedName(SERIALIZED_NAME_FROM_TAG)
  @javax.annotation.Nullable
  private String fromTag;

  public static final String SERIALIZED_NAME_INTERACTION_ID = "interaction_id";
  @SerializedName(SERIALIZED_NAME_INTERACTION_ID)
  @javax.annotation.Nullable
  private String interactionId;

  public static final String SERIALIZED_NAME_IS_LOOPBACK = "is_loopback";
  @SerializedName(SERIALIZED_NAME_IS_LOOPBACK)
  @javax.annotation.Nullable
  private Boolean isLoopback;

  public static final String SERIALIZED_NAME_IS_ONHOLD = "is_onhold";
  @SerializedName(SERIALIZED_NAME_IS_ONHOLD)
  @javax.annotation.Nullable
  private Boolean isOnhold;

  public static final String SERIALIZED_NAME_OTHER_LEG = "other_leg";
  @SerializedName(SERIALIZED_NAME_OTHER_LEG)
  @javax.annotation.Nullable
  private String otherLeg;

  public static final String SERIALIZED_NAME_OWNER_ID = "owner_id";
  @SerializedName(SERIALIZED_NAME_OWNER_ID)
  @javax.annotation.Nullable
  private String ownerId;

  public static final String SERIALIZED_NAME_PRESENCE_ID = "presence_id";
  @SerializedName(SERIALIZED_NAME_PRESENCE_ID)
  @javax.annotation.Nullable
  private String presenceId;

  public static final String SERIALIZED_NAME_REQUEST = "request";
  @SerializedName(SERIALIZED_NAME_REQUEST)
  @javax.annotation.Nullable
  private String request;

  public static final String SERIALIZED_NAME_RESELLER_ID = "reseller_id";
  @SerializedName(SERIALIZED_NAME_RESELLER_ID)
  @javax.annotation.Nullable
  private String resellerId;

  public static final String SERIALIZED_NAME_TIMESTAMP = "timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  @javax.annotation.Nullable
  private Integer timestamp;

  public static final String SERIALIZED_NAME_TO_TAG = "to_tag";
  @SerializedName(SERIALIZED_NAME_TO_TAG)
  @javax.annotation.Nullable
  private String toTag;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  @javax.annotation.Nullable
  private String username;

  public static final String SERIALIZED_NAME_UUID = "uuid";
  @SerializedName(SERIALIZED_NAME_UUID)
  @javax.annotation.Nullable
  private String uuid;

  public ServiceChannelOutput() {
  }

  public ServiceChannelOutput answered(@javax.annotation.Nullable Boolean answered) {
    this.answered = answered;
    return this;
  }

  /**
   * Get answered
   * @return answered
   */
  @javax.annotation.Nullable
  public Boolean getAnswered() {
    return answered;
  }

  public void setAnswered(@javax.annotation.Nullable Boolean answered) {
    this.answered = answered;
  }


  public ServiceChannelOutput authorizingId(@javax.annotation.Nullable String authorizingId) {
    this.authorizingId = authorizingId;
    return this;
  }

  /**
   * Get authorizingId
   * @return authorizingId
   */
  @javax.annotation.Nullable
  public String getAuthorizingId() {
    return authorizingId;
  }

  public void setAuthorizingId(@javax.annotation.Nullable String authorizingId) {
    this.authorizingId = authorizingId;
  }


  public ServiceChannelOutput authorizingType(@javax.annotation.Nullable String authorizingType) {
    this.authorizingType = authorizingType;
    return this;
  }

  /**
   * Get authorizingType
   * @return authorizingType
   */
  @javax.annotation.Nullable
  public String getAuthorizingType() {
    return authorizingType;
  }

  public void setAuthorizingType(@javax.annotation.Nullable String authorizingType) {
    this.authorizingType = authorizingType;
  }


  public ServiceChannelOutput callflowId(@javax.annotation.Nullable String callflowId) {
    this.callflowId = callflowId;
    return this;
  }

  /**
   * Get callflowId
   * @return callflowId
   */
  @javax.annotation.Nullable
  public String getCallflowId() {
    return callflowId;
  }

  public void setCallflowId(@javax.annotation.Nullable String callflowId) {
    this.callflowId = callflowId;
  }


  public ServiceChannelOutput channelAuthorized(@javax.annotation.Nullable Boolean channelAuthorized) {
    this.channelAuthorized = channelAuthorized;
    return this;
  }

  /**
   * Get channelAuthorized
   * @return channelAuthorized
   */
  @javax.annotation.Nullable
  public Boolean getChannelAuthorized() {
    return channelAuthorized;
  }

  public void setChannelAuthorized(@javax.annotation.Nullable Boolean channelAuthorized) {
    this.channelAuthorized = channelAuthorized;
  }


  public ServiceChannelOutput customApplicationVars(@javax.annotation.Nullable Map<String, Object> customApplicationVars) {
    this.customApplicationVars = customApplicationVars;
    return this;
  }

  public ServiceChannelOutput putCustomApplicationVarsItem(String key, Object customApplicationVarsItem) {
    if (this.customApplicationVars == null) {
      this.customApplicationVars = new HashMap<>();
    }
    this.customApplicationVars.put(key, customApplicationVarsItem);
    return this;
  }

  /**
   * Get customApplicationVars
   * @return customApplicationVars
   */
  @javax.annotation.Nullable
  public Map<String, Object> getCustomApplicationVars() {
    return customApplicationVars;
  }

  public void setCustomApplicationVars(@javax.annotation.Nullable Map<String, Object> customApplicationVars) {
    this.customApplicationVars = customApplicationVars;
  }


  public ServiceChannelOutput customAuthHeaders(@javax.annotation.Nullable Map<String, Object> customAuthHeaders) {
    this.customAuthHeaders = customAuthHeaders;
    return this;
  }

  public ServiceChannelOutput putCustomAuthHeadersItem(String key, Object customAuthHeadersItem) {
    if (this.customAuthHeaders == null) {
      this.customAuthHeaders = new HashMap<>();
    }
    this.customAuthHeaders.put(key, customAuthHeadersItem);
    return this;
  }

  /**
   * Get customAuthHeaders
   * @return customAuthHeaders
   */
  @javax.annotation.Nullable
  public Map<String, Object> getCustomAuthHeaders() {
    return customAuthHeaders;
  }

  public void setCustomAuthHeaders(@javax.annotation.Nullable Map<String, Object> customAuthHeaders) {
    this.customAuthHeaders = customAuthHeaders;
  }


  public ServiceChannelOutput customChannelVars(@javax.annotation.Nullable Map<String, Object> customChannelVars) {
    this.customChannelVars = customChannelVars;
    return this;
  }

  public ServiceChannelOutput putCustomChannelVarsItem(String key, Object customChannelVarsItem) {
    if (this.customChannelVars == null) {
      this.customChannelVars = new HashMap<>();
    }
    this.customChannelVars.put(key, customChannelVarsItem);
    return this;
  }

  /**
   * Get customChannelVars
   * @return customChannelVars
   */
  @javax.annotation.Nullable
  public Map<String, Object> getCustomChannelVars() {
    return customChannelVars;
  }

  public void setCustomChannelVars(@javax.annotation.Nullable Map<String, Object> customChannelVars) {
    this.customChannelVars = customChannelVars;
  }


  public ServiceChannelOutput customSipHeaders(@javax.annotation.Nullable Map<String, Object> customSipHeaders) {
    this.customSipHeaders = customSipHeaders;
    return this;
  }

  public ServiceChannelOutput putCustomSipHeadersItem(String key, Object customSipHeadersItem) {
    if (this.customSipHeaders == null) {
      this.customSipHeaders = new HashMap<>();
    }
    this.customSipHeaders.put(key, customSipHeadersItem);
    return this;
  }

  /**
   * Get customSipHeaders
   * @return customSipHeaders
   */
  @javax.annotation.Nullable
  public Map<String, Object> getCustomSipHeaders() {
    return customSipHeaders;
  }

  public void setCustomSipHeaders(@javax.annotation.Nullable Map<String, Object> customSipHeaders) {
    this.customSipHeaders = customSipHeaders;
  }


  public ServiceChannelOutput destination(@javax.annotation.Nullable String destination) {
    this.destination = destination;
    return this;
  }

  /**
   * Get destination
   * @return destination
   */
  @javax.annotation.Nullable
  public String getDestination() {
    return destination;
  }

  public void setDestination(@javax.annotation.Nullable String destination) {
    this.destination = destination;
  }


  public ServiceChannelOutput direction(@javax.annotation.Nullable String direction) {
    this.direction = direction;
    return this;
  }

  /**
   * Get direction
   * @return direction
   */
  @javax.annotation.Nullable
  public String getDirection() {
    return direction;
  }

  public void setDirection(@javax.annotation.Nullable String direction) {
    this.direction = direction;
  }


  public ServiceChannelOutput elapsedS(@javax.annotation.Nullable Integer elapsedS) {
    this.elapsedS = elapsedS;
    return this;
  }

  /**
   * Get elapsedS
   * @return elapsedS
   */
  @javax.annotation.Nullable
  public Integer getElapsedS() {
    return elapsedS;
  }

  public void setElapsedS(@javax.annotation.Nullable Integer elapsedS) {
    this.elapsedS = elapsedS;
  }


  public ServiceChannelOutput fromTag(@javax.annotation.Nullable String fromTag) {
    this.fromTag = fromTag;
    return this;
  }

  /**
   * Get fromTag
   * @return fromTag
   */
  @javax.annotation.Nullable
  public String getFromTag() {
    return fromTag;
  }

  public void setFromTag(@javax.annotation.Nullable String fromTag) {
    this.fromTag = fromTag;
  }


  public ServiceChannelOutput interactionId(@javax.annotation.Nullable String interactionId) {
    this.interactionId = interactionId;
    return this;
  }

  /**
   * Get interactionId
   * @return interactionId
   */
  @javax.annotation.Nullable
  public String getInteractionId() {
    return interactionId;
  }

  public void setInteractionId(@javax.annotation.Nullable String interactionId) {
    this.interactionId = interactionId;
  }


  public ServiceChannelOutput isLoopback(@javax.annotation.Nullable Boolean isLoopback) {
    this.isLoopback = isLoopback;
    return this;
  }

  /**
   * Get isLoopback
   * @return isLoopback
   */
  @javax.annotation.Nullable
  public Boolean getIsLoopback() {
    return isLoopback;
  }

  public void setIsLoopback(@javax.annotation.Nullable Boolean isLoopback) {
    this.isLoopback = isLoopback;
  }


  public ServiceChannelOutput isOnhold(@javax.annotation.Nullable Boolean isOnhold) {
    this.isOnhold = isOnhold;
    return this;
  }

  /**
   * Get isOnhold
   * @return isOnhold
   */
  @javax.annotation.Nullable
  public Boolean getIsOnhold() {
    return isOnhold;
  }

  public void setIsOnhold(@javax.annotation.Nullable Boolean isOnhold) {
    this.isOnhold = isOnhold;
  }


  public ServiceChannelOutput otherLeg(@javax.annotation.Nullable String otherLeg) {
    this.otherLeg = otherLeg;
    return this;
  }

  /**
   * Get otherLeg
   * @return otherLeg
   */
  @javax.annotation.Nullable
  public String getOtherLeg() {
    return otherLeg;
  }

  public void setOtherLeg(@javax.annotation.Nullable String otherLeg) {
    this.otherLeg = otherLeg;
  }


  public ServiceChannelOutput ownerId(@javax.annotation.Nullable String ownerId) {
    this.ownerId = ownerId;
    return this;
  }

  /**
   * Get ownerId
   * @return ownerId
   */
  @javax.annotation.Nullable
  public String getOwnerId() {
    return ownerId;
  }

  public void setOwnerId(@javax.annotation.Nullable String ownerId) {
    this.ownerId = ownerId;
  }


  public ServiceChannelOutput presenceId(@javax.annotation.Nullable String presenceId) {
    this.presenceId = presenceId;
    return this;
  }

  /**
   * Get presenceId
   * @return presenceId
   */
  @javax.annotation.Nullable
  public String getPresenceId() {
    return presenceId;
  }

  public void setPresenceId(@javax.annotation.Nullable String presenceId) {
    this.presenceId = presenceId;
  }


  public ServiceChannelOutput request(@javax.annotation.Nullable String request) {
    this.request = request;
    return this;
  }

  /**
   * Get request
   * @return request
   */
  @javax.annotation.Nullable
  public String getRequest() {
    return request;
  }

  public void setRequest(@javax.annotation.Nullable String request) {
    this.request = request;
  }


  public ServiceChannelOutput resellerId(@javax.annotation.Nullable String resellerId) {
    this.resellerId = resellerId;
    return this;
  }

  /**
   * Get resellerId
   * @return resellerId
   */
  @javax.annotation.Nullable
  public String getResellerId() {
    return resellerId;
  }

  public void setResellerId(@javax.annotation.Nullable String resellerId) {
    this.resellerId = resellerId;
  }


  public ServiceChannelOutput timestamp(@javax.annotation.Nullable Integer timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  /**
   * Get timestamp
   * @return timestamp
   */
  @javax.annotation.Nullable
  public Integer getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(@javax.annotation.Nullable Integer timestamp) {
    this.timestamp = timestamp;
  }


  public ServiceChannelOutput toTag(@javax.annotation.Nullable String toTag) {
    this.toTag = toTag;
    return this;
  }

  /**
   * Get toTag
   * @return toTag
   */
  @javax.annotation.Nullable
  public String getToTag() {
    return toTag;
  }

  public void setToTag(@javax.annotation.Nullable String toTag) {
    this.toTag = toTag;
  }


  public ServiceChannelOutput username(@javax.annotation.Nullable String username) {
    this.username = username;
    return this;
  }

  /**
   * Get username
   * @return username
   */
  @javax.annotation.Nullable
  public String getUsername() {
    return username;
  }

  public void setUsername(@javax.annotation.Nullable String username) {
    this.username = username;
  }


  public ServiceChannelOutput uuid(@javax.annotation.Nullable String uuid) {
    this.uuid = uuid;
    return this;
  }

  /**
   * Get uuid
   * @return uuid
   */
  @javax.annotation.Nullable
  public String getUuid() {
    return uuid;
  }

  public void setUuid(@javax.annotation.Nullable String uuid) {
    this.uuid = uuid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceChannelOutput serviceChannelOutput = (ServiceChannelOutput) o;
    return Objects.equals(this.answered, serviceChannelOutput.answered) &&
        Objects.equals(this.authorizingId, serviceChannelOutput.authorizingId) &&
        Objects.equals(this.authorizingType, serviceChannelOutput.authorizingType) &&
        Objects.equals(this.callflowId, serviceChannelOutput.callflowId) &&
        Objects.equals(this.channelAuthorized, serviceChannelOutput.channelAuthorized) &&
        Objects.equals(this.customApplicationVars, serviceChannelOutput.customApplicationVars) &&
        Objects.equals(this.customAuthHeaders, serviceChannelOutput.customAuthHeaders) &&
        Objects.equals(this.customChannelVars, serviceChannelOutput.customChannelVars) &&
        Objects.equals(this.customSipHeaders, serviceChannelOutput.customSipHeaders) &&
        Objects.equals(this.destination, serviceChannelOutput.destination) &&
        Objects.equals(this.direction, serviceChannelOutput.direction) &&
        Objects.equals(this.elapsedS, serviceChannelOutput.elapsedS) &&
        Objects.equals(this.fromTag, serviceChannelOutput.fromTag) &&
        Objects.equals(this.interactionId, serviceChannelOutput.interactionId) &&
        Objects.equals(this.isLoopback, serviceChannelOutput.isLoopback) &&
        Objects.equals(this.isOnhold, serviceChannelOutput.isOnhold) &&
        Objects.equals(this.otherLeg, serviceChannelOutput.otherLeg) &&
        Objects.equals(this.ownerId, serviceChannelOutput.ownerId) &&
        Objects.equals(this.presenceId, serviceChannelOutput.presenceId) &&
        Objects.equals(this.request, serviceChannelOutput.request) &&
        Objects.equals(this.resellerId, serviceChannelOutput.resellerId) &&
        Objects.equals(this.timestamp, serviceChannelOutput.timestamp) &&
        Objects.equals(this.toTag, serviceChannelOutput.toTag) &&
        Objects.equals(this.username, serviceChannelOutput.username) &&
        Objects.equals(this.uuid, serviceChannelOutput.uuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(answered, authorizingId, authorizingType, callflowId, channelAuthorized, customApplicationVars, customAuthHeaders, customChannelVars, customSipHeaders, destination, direction, elapsedS, fromTag, interactionId, isLoopback, isOnhold, otherLeg, ownerId, presenceId, request, resellerId, timestamp, toTag, username, uuid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceChannelOutput {\n");
    sb.append("    answered: ").append(toIndentedString(answered)).append("\n");
    sb.append("    authorizingId: ").append(toIndentedString(authorizingId)).append("\n");
    sb.append("    authorizingType: ").append(toIndentedString(authorizingType)).append("\n");
    sb.append("    callflowId: ").append(toIndentedString(callflowId)).append("\n");
    sb.append("    channelAuthorized: ").append(toIndentedString(channelAuthorized)).append("\n");
    sb.append("    customApplicationVars: ").append(toIndentedString(customApplicationVars)).append("\n");
    sb.append("    customAuthHeaders: ").append(toIndentedString(customAuthHeaders)).append("\n");
    sb.append("    customChannelVars: ").append(toIndentedString(customChannelVars)).append("\n");
    sb.append("    customSipHeaders: ").append(toIndentedString(customSipHeaders)).append("\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    elapsedS: ").append(toIndentedString(elapsedS)).append("\n");
    sb.append("    fromTag: ").append(toIndentedString(fromTag)).append("\n");
    sb.append("    interactionId: ").append(toIndentedString(interactionId)).append("\n");
    sb.append("    isLoopback: ").append(toIndentedString(isLoopback)).append("\n");
    sb.append("    isOnhold: ").append(toIndentedString(isOnhold)).append("\n");
    sb.append("    otherLeg: ").append(toIndentedString(otherLeg)).append("\n");
    sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
    sb.append("    presenceId: ").append(toIndentedString(presenceId)).append("\n");
    sb.append("    request: ").append(toIndentedString(request)).append("\n");
    sb.append("    resellerId: ").append(toIndentedString(resellerId)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    toTag: ").append(toIndentedString(toTag)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("answered", "authorizing_id", "authorizing_type", "callflow_id", "channel_authorized", "custom_application_vars", "custom_auth_headers", "custom_channel_vars", "custom_sip_headers", "destination", "direction", "elapsed_s", "from_tag", "interaction_id", "is_loopback", "is_onhold", "other_leg", "owner_id", "presence_id", "request", "reseller_id", "timestamp", "to_tag", "username", "uuid"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ServiceChannelOutput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ServiceChannelOutput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ServiceChannelOutput is not found in the empty JSON string", ServiceChannelOutput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ServiceChannelOutput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ServiceChannelOutput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("authorizing_id") != null && !jsonObj.get("authorizing_id").isJsonNull()) && !jsonObj.get("authorizing_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authorizing_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authorizing_id").toString()));
      }
      if ((jsonObj.get("authorizing_type") != null && !jsonObj.get("authorizing_type").isJsonNull()) && !jsonObj.get("authorizing_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authorizing_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authorizing_type").toString()));
      }
      if ((jsonObj.get("callflow_id") != null && !jsonObj.get("callflow_id").isJsonNull()) && !jsonObj.get("callflow_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `callflow_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("callflow_id").toString()));
      }
      if ((jsonObj.get("destination") != null && !jsonObj.get("destination").isJsonNull()) && !jsonObj.get("destination").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `destination` to be a primitive type in the JSON string but got `%s`", jsonObj.get("destination").toString()));
      }
      if ((jsonObj.get("direction") != null && !jsonObj.get("direction").isJsonNull()) && !jsonObj.get("direction").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `direction` to be a primitive type in the JSON string but got `%s`", jsonObj.get("direction").toString()));
      }
      if ((jsonObj.get("from_tag") != null && !jsonObj.get("from_tag").isJsonNull()) && !jsonObj.get("from_tag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `from_tag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("from_tag").toString()));
      }
      if ((jsonObj.get("interaction_id") != null && !jsonObj.get("interaction_id").isJsonNull()) && !jsonObj.get("interaction_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interaction_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interaction_id").toString()));
      }
      if ((jsonObj.get("other_leg") != null && !jsonObj.get("other_leg").isJsonNull()) && !jsonObj.get("other_leg").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `other_leg` to be a primitive type in the JSON string but got `%s`", jsonObj.get("other_leg").toString()));
      }
      if ((jsonObj.get("owner_id") != null && !jsonObj.get("owner_id").isJsonNull()) && !jsonObj.get("owner_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `owner_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("owner_id").toString()));
      }
      if ((jsonObj.get("presence_id") != null && !jsonObj.get("presence_id").isJsonNull()) && !jsonObj.get("presence_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `presence_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("presence_id").toString()));
      }
      if ((jsonObj.get("request") != null && !jsonObj.get("request").isJsonNull()) && !jsonObj.get("request").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `request` to be a primitive type in the JSON string but got `%s`", jsonObj.get("request").toString()));
      }
      if ((jsonObj.get("reseller_id") != null && !jsonObj.get("reseller_id").isJsonNull()) && !jsonObj.get("reseller_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reseller_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reseller_id").toString()));
      }
      if ((jsonObj.get("to_tag") != null && !jsonObj.get("to_tag").isJsonNull()) && !jsonObj.get("to_tag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `to_tag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("to_tag").toString()));
      }
      if ((jsonObj.get("username") != null && !jsonObj.get("username").isJsonNull()) && !jsonObj.get("username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("username").toString()));
      }
      if ((jsonObj.get("uuid") != null && !jsonObj.get("uuid").isJsonNull()) && !jsonObj.get("uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uuid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ServiceChannelOutput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ServiceChannelOutput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ServiceChannelOutput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ServiceChannelOutput.class));

       return (TypeAdapter<T>) new TypeAdapter<ServiceChannelOutput>() {
           @Override
           public void write(JsonWriter out, ServiceChannelOutput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ServiceChannelOutput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ServiceChannelOutput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ServiceChannelOutput
   * @throws IOException if the JSON string is invalid with respect to ServiceChannelOutput
   */
  public static ServiceChannelOutput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ServiceChannelOutput.class);
  }

  /**
   * Convert an instance of ServiceChannelOutput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

