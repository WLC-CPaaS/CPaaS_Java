/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ServiceVOIPChannelRunActionData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class ServiceVOIPChannelRunActionData {
  public static final String SERIALIZED_NAME_ACTION = "action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  @javax.annotation.Nonnull
  private String action;

  public static final String SERIALIZED_NAME_MOH = "moh";
  @SerializedName(SERIALIZED_NAME_MOH)
  @javax.annotation.Nullable
  private String moh;

  public static final String SERIALIZED_NAME_TAKEBACK_DTMF = "takeback_dtmf";
  @SerializedName(SERIALIZED_NAME_TAKEBACK_DTMF)
  @javax.annotation.Nullable
  private String takebackDtmf;

  public static final String SERIALIZED_NAME_TARGET = "target";
  @SerializedName(SERIALIZED_NAME_TARGET)
  @javax.annotation.Nullable
  private String target;

  public ServiceVOIPChannelRunActionData() {
  }

  public ServiceVOIPChannelRunActionData action(@javax.annotation.Nonnull String action) {
    this.action = action;
    return this;
  }

  /**
   * Get action
   * @return action
   */
  @javax.annotation.Nonnull
  public String getAction() {
    return action;
  }

  public void setAction(@javax.annotation.Nonnull String action) {
    this.action = action;
  }


  public ServiceVOIPChannelRunActionData moh(@javax.annotation.Nullable String moh) {
    this.moh = moh;
    return this;
  }

  /**
   * Get moh
   * @return moh
   */
  @javax.annotation.Nullable
  public String getMoh() {
    return moh;
  }

  public void setMoh(@javax.annotation.Nullable String moh) {
    this.moh = moh;
  }


  public ServiceVOIPChannelRunActionData takebackDtmf(@javax.annotation.Nullable String takebackDtmf) {
    this.takebackDtmf = takebackDtmf;
    return this;
  }

  /**
   * Get takebackDtmf
   * @return takebackDtmf
   */
  @javax.annotation.Nullable
  public String getTakebackDtmf() {
    return takebackDtmf;
  }

  public void setTakebackDtmf(@javax.annotation.Nullable String takebackDtmf) {
    this.takebackDtmf = takebackDtmf;
  }


  public ServiceVOIPChannelRunActionData target(@javax.annotation.Nullable String target) {
    this.target = target;
    return this;
  }

  /**
   * Get target
   * @return target
   */
  @javax.annotation.Nullable
  public String getTarget() {
    return target;
  }

  public void setTarget(@javax.annotation.Nullable String target) {
    this.target = target;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceVOIPChannelRunActionData serviceVOIPChannelRunActionData = (ServiceVOIPChannelRunActionData) o;
    return Objects.equals(this.action, serviceVOIPChannelRunActionData.action) &&
        Objects.equals(this.moh, serviceVOIPChannelRunActionData.moh) &&
        Objects.equals(this.takebackDtmf, serviceVOIPChannelRunActionData.takebackDtmf) &&
        Objects.equals(this.target, serviceVOIPChannelRunActionData.target);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, moh, takebackDtmf, target);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceVOIPChannelRunActionData {\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    moh: ").append(toIndentedString(moh)).append("\n");
    sb.append("    takebackDtmf: ").append(toIndentedString(takebackDtmf)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("action", "moh", "takeback_dtmf", "target"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(Arrays.asList("action"));
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ServiceVOIPChannelRunActionData
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ServiceVOIPChannelRunActionData.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ServiceVOIPChannelRunActionData is not found in the empty JSON string", ServiceVOIPChannelRunActionData.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ServiceVOIPChannelRunActionData.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ServiceVOIPChannelRunActionData` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ServiceVOIPChannelRunActionData.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("action").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `action` to be a primitive type in the JSON string but got `%s`", jsonObj.get("action").toString()));
      }
      if ((jsonObj.get("moh") != null && !jsonObj.get("moh").isJsonNull()) && !jsonObj.get("moh").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `moh` to be a primitive type in the JSON string but got `%s`", jsonObj.get("moh").toString()));
      }
      if ((jsonObj.get("takeback_dtmf") != null && !jsonObj.get("takeback_dtmf").isJsonNull()) && !jsonObj.get("takeback_dtmf").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `takeback_dtmf` to be a primitive type in the JSON string but got `%s`", jsonObj.get("takeback_dtmf").toString()));
      }
      if ((jsonObj.get("target") != null && !jsonObj.get("target").isJsonNull()) && !jsonObj.get("target").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `target` to be a primitive type in the JSON string but got `%s`", jsonObj.get("target").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ServiceVOIPChannelRunActionData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ServiceVOIPChannelRunActionData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ServiceVOIPChannelRunActionData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ServiceVOIPChannelRunActionData.class));

       return (TypeAdapter<T>) new TypeAdapter<ServiceVOIPChannelRunActionData>() {
           @Override
           public void write(JsonWriter out, ServiceVOIPChannelRunActionData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ServiceVOIPChannelRunActionData read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ServiceVOIPChannelRunActionData given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ServiceVOIPChannelRunActionData
   * @throws IOException if the JSON string is invalid with respect to ServiceVOIPChannelRunActionData
   */
  public static ServiceVOIPChannelRunActionData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ServiceVOIPChannelRunActionData.class);
  }

  /**
   * Convert an instance of ServiceVOIPChannelRunActionData to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

