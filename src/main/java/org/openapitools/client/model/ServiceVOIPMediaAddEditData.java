/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ServiceTTS;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ServiceVOIPMediaAddEditData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class ServiceVOIPMediaAddEditData {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;

  /**
   * Gets or Sets mediaSource
   */
  @JsonAdapter(MediaSourceEnum.Adapter.class)
  public enum MediaSourceEnum {
    UPLOAD("upload"),
    
    RECORDING("recording"),
    
    TTS("tts");

    private String value;

    MediaSourceEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MediaSourceEnum fromValue(String value) {
      for (MediaSourceEnum b : MediaSourceEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<MediaSourceEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MediaSourceEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MediaSourceEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return MediaSourceEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      MediaSourceEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_MEDIA_SOURCE = "media_source";
  @SerializedName(SERIALIZED_NAME_MEDIA_SOURCE)
  @javax.annotation.Nullable
  private MediaSourceEnum mediaSource;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nonnull
  private String name;

  public static final String SERIALIZED_NAME_TTS = "tts";
  @SerializedName(SERIALIZED_NAME_TTS)
  @javax.annotation.Nullable
  private ServiceTTS tts;

  public ServiceVOIPMediaAddEditData() {
  }

  public ServiceVOIPMediaAddEditData description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public ServiceVOIPMediaAddEditData mediaSource(@javax.annotation.Nullable MediaSourceEnum mediaSource) {
    this.mediaSource = mediaSource;
    return this;
  }

  /**
   * Get mediaSource
   * @return mediaSource
   */
  @javax.annotation.Nullable
  public MediaSourceEnum getMediaSource() {
    return mediaSource;
  }

  public void setMediaSource(@javax.annotation.Nullable MediaSourceEnum mediaSource) {
    this.mediaSource = mediaSource;
  }


  public ServiceVOIPMediaAddEditData name(@javax.annotation.Nonnull String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nonnull String name) {
    this.name = name;
  }


  public ServiceVOIPMediaAddEditData tts(@javax.annotation.Nullable ServiceTTS tts) {
    this.tts = tts;
    return this;
  }

  /**
   * Get tts
   * @return tts
   */
  @javax.annotation.Nullable
  public ServiceTTS getTts() {
    return tts;
  }

  public void setTts(@javax.annotation.Nullable ServiceTTS tts) {
    this.tts = tts;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceVOIPMediaAddEditData serviceVOIPMediaAddEditData = (ServiceVOIPMediaAddEditData) o;
    return Objects.equals(this.description, serviceVOIPMediaAddEditData.description) &&
        Objects.equals(this.mediaSource, serviceVOIPMediaAddEditData.mediaSource) &&
        Objects.equals(this.name, serviceVOIPMediaAddEditData.name) &&
        Objects.equals(this.tts, serviceVOIPMediaAddEditData.tts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, mediaSource, name, tts);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceVOIPMediaAddEditData {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    mediaSource: ").append(toIndentedString(mediaSource)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    tts: ").append(toIndentedString(tts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("description", "media_source", "name", "tts"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(Arrays.asList("name"));
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ServiceVOIPMediaAddEditData
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ServiceVOIPMediaAddEditData.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ServiceVOIPMediaAddEditData is not found in the empty JSON string", ServiceVOIPMediaAddEditData.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ServiceVOIPMediaAddEditData.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ServiceVOIPMediaAddEditData` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ServiceVOIPMediaAddEditData.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("media_source") != null && !jsonObj.get("media_source").isJsonNull()) && !jsonObj.get("media_source").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `media_source` to be a primitive type in the JSON string but got `%s`", jsonObj.get("media_source").toString()));
      }
      // validate the optional field `media_source`
      if (jsonObj.get("media_source") != null && !jsonObj.get("media_source").isJsonNull()) {
        MediaSourceEnum.validateJsonElement(jsonObj.get("media_source"));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `tts`
      if (jsonObj.get("tts") != null && !jsonObj.get("tts").isJsonNull()) {
        ServiceTTS.validateJsonElement(jsonObj.get("tts"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ServiceVOIPMediaAddEditData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ServiceVOIPMediaAddEditData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ServiceVOIPMediaAddEditData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ServiceVOIPMediaAddEditData.class));

       return (TypeAdapter<T>) new TypeAdapter<ServiceVOIPMediaAddEditData>() {
           @Override
           public void write(JsonWriter out, ServiceVOIPMediaAddEditData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ServiceVOIPMediaAddEditData read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ServiceVOIPMediaAddEditData given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ServiceVOIPMediaAddEditData
   * @throws IOException if the JSON string is invalid with respect to ServiceVOIPMediaAddEditData
   */
  public static ServiceVOIPMediaAddEditData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ServiceVOIPMediaAddEditData.class);
  }

  /**
   * Convert an instance of ServiceVOIPMediaAddEditData to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

