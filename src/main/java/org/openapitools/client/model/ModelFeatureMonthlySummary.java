/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ModelFeatureMonthlySummary
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class ModelFeatureMonthlySummary {
  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  @javax.annotation.Nullable
  private String createdAt;

  public static final String SERIALIZED_NAME_FEATURE_COUNT = "feature_count";
  @SerializedName(SERIALIZED_NAME_FEATURE_COUNT)
  @javax.annotation.Nullable
  private Integer featureCount;

  public static final String SERIALIZED_NAME_FEATURE_NAME = "feature_name";
  @SerializedName(SERIALIZED_NAME_FEATURE_NAME)
  @javax.annotation.Nullable
  private String featureName;

  public static final String SERIALIZED_NAME_TRANSACTION_MONTH = "transaction_month";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_MONTH)
  @javax.annotation.Nullable
  private Integer transactionMonth;

  public static final String SERIALIZED_NAME_TRANSACTION_YEAR = "transaction_year";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_YEAR)
  @javax.annotation.Nullable
  private Integer transactionYear;

  public ModelFeatureMonthlySummary() {
  }

  public ModelFeatureMonthlySummary createdAt(@javax.annotation.Nullable String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(@javax.annotation.Nullable String createdAt) {
    this.createdAt = createdAt;
  }


  public ModelFeatureMonthlySummary featureCount(@javax.annotation.Nullable Integer featureCount) {
    this.featureCount = featureCount;
    return this;
  }

  /**
   * Get featureCount
   * @return featureCount
   */
  @javax.annotation.Nullable
  public Integer getFeatureCount() {
    return featureCount;
  }

  public void setFeatureCount(@javax.annotation.Nullable Integer featureCount) {
    this.featureCount = featureCount;
  }


  public ModelFeatureMonthlySummary featureName(@javax.annotation.Nullable String featureName) {
    this.featureName = featureName;
    return this;
  }

  /**
   * Get featureName
   * @return featureName
   */
  @javax.annotation.Nullable
  public String getFeatureName() {
    return featureName;
  }

  public void setFeatureName(@javax.annotation.Nullable String featureName) {
    this.featureName = featureName;
  }


  public ModelFeatureMonthlySummary transactionMonth(@javax.annotation.Nullable Integer transactionMonth) {
    this.transactionMonth = transactionMonth;
    return this;
  }

  /**
   * Get transactionMonth
   * @return transactionMonth
   */
  @javax.annotation.Nullable
  public Integer getTransactionMonth() {
    return transactionMonth;
  }

  public void setTransactionMonth(@javax.annotation.Nullable Integer transactionMonth) {
    this.transactionMonth = transactionMonth;
  }


  public ModelFeatureMonthlySummary transactionYear(@javax.annotation.Nullable Integer transactionYear) {
    this.transactionYear = transactionYear;
    return this;
  }

  /**
   * Get transactionYear
   * @return transactionYear
   */
  @javax.annotation.Nullable
  public Integer getTransactionYear() {
    return transactionYear;
  }

  public void setTransactionYear(@javax.annotation.Nullable Integer transactionYear) {
    this.transactionYear = transactionYear;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelFeatureMonthlySummary modelFeatureMonthlySummary = (ModelFeatureMonthlySummary) o;
    return Objects.equals(this.createdAt, modelFeatureMonthlySummary.createdAt) &&
        Objects.equals(this.featureCount, modelFeatureMonthlySummary.featureCount) &&
        Objects.equals(this.featureName, modelFeatureMonthlySummary.featureName) &&
        Objects.equals(this.transactionMonth, modelFeatureMonthlySummary.transactionMonth) &&
        Objects.equals(this.transactionYear, modelFeatureMonthlySummary.transactionYear);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, featureCount, featureName, transactionMonth, transactionYear);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelFeatureMonthlySummary {\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    featureCount: ").append(toIndentedString(featureCount)).append("\n");
    sb.append("    featureName: ").append(toIndentedString(featureName)).append("\n");
    sb.append("    transactionMonth: ").append(toIndentedString(transactionMonth)).append("\n");
    sb.append("    transactionYear: ").append(toIndentedString(transactionYear)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("created_at");
    openapiFields.add("feature_count");
    openapiFields.add("feature_name");
    openapiFields.add("transaction_month");
    openapiFields.add("transaction_year");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ModelFeatureMonthlySummary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModelFeatureMonthlySummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModelFeatureMonthlySummary is not found in the empty JSON string", ModelFeatureMonthlySummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModelFeatureMonthlySummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModelFeatureMonthlySummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("created_at") != null && !jsonObj.get("created_at").isJsonNull()) && !jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
      if ((jsonObj.get("feature_name") != null && !jsonObj.get("feature_name").isJsonNull()) && !jsonObj.get("feature_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `feature_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("feature_name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModelFeatureMonthlySummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModelFeatureMonthlySummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModelFeatureMonthlySummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModelFeatureMonthlySummary.class));

       return (TypeAdapter<T>) new TypeAdapter<ModelFeatureMonthlySummary>() {
           @Override
           public void write(JsonWriter out, ModelFeatureMonthlySummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModelFeatureMonthlySummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ModelFeatureMonthlySummary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ModelFeatureMonthlySummary
   * @throws IOException if the JSON string is invalid with respect to ModelFeatureMonthlySummary
   */
  public static ModelFeatureMonthlySummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModelFeatureMonthlySummary.class);
  }

  /**
   * Convert an instance of ModelFeatureMonthlySummary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

