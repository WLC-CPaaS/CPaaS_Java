/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ModelsVOIPAccountMusicOnHold;
import org.openapitools.client.model.ModelsVOIPAccountOutputFullCallerid;
import org.openapitools.client.model.ModelsVOIPSharedDoNotDisturb;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ServiceVOIPAccountEditData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class ServiceVOIPAccountEditData {
  public static final String SERIALIZED_NAME_CALLER_ID = "caller_id";
  @SerializedName(SERIALIZED_NAME_CALLER_ID)
  @javax.annotation.Nullable
  private ModelsVOIPAccountOutputFullCallerid callerId;

  public static final String SERIALIZED_NAME_DO_NOT_DISTURB = "do_not_disturb";
  @SerializedName(SERIALIZED_NAME_DO_NOT_DISTURB)
  @javax.annotation.Nullable
  private ModelsVOIPSharedDoNotDisturb doNotDisturb;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  @javax.annotation.Nullable
  private Boolean enabled;

  public static final String SERIALIZED_NAME_MUSIC_ON_HOLD = "music_on_hold";
  @SerializedName(SERIALIZED_NAME_MUSIC_ON_HOLD)
  @javax.annotation.Nullable
  private ModelsVOIPAccountMusicOnHold musicOnHold;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nonnull
  private String name;

  public static final String SERIALIZED_NAME_TIMEZONE = "timezone";
  @SerializedName(SERIALIZED_NAME_TIMEZONE)
  @javax.annotation.Nonnull
  private String timezone;

  public ServiceVOIPAccountEditData() {
  }

  public ServiceVOIPAccountEditData callerId(@javax.annotation.Nullable ModelsVOIPAccountOutputFullCallerid callerId) {
    this.callerId = callerId;
    return this;
  }

  /**
   * Get callerId
   * @return callerId
   */
  @javax.annotation.Nullable
  public ModelsVOIPAccountOutputFullCallerid getCallerId() {
    return callerId;
  }

  public void setCallerId(@javax.annotation.Nullable ModelsVOIPAccountOutputFullCallerid callerId) {
    this.callerId = callerId;
  }


  public ServiceVOIPAccountEditData doNotDisturb(@javax.annotation.Nullable ModelsVOIPSharedDoNotDisturb doNotDisturb) {
    this.doNotDisturb = doNotDisturb;
    return this;
  }

  /**
   * Get doNotDisturb
   * @return doNotDisturb
   */
  @javax.annotation.Nullable
  public ModelsVOIPSharedDoNotDisturb getDoNotDisturb() {
    return doNotDisturb;
  }

  public void setDoNotDisturb(@javax.annotation.Nullable ModelsVOIPSharedDoNotDisturb doNotDisturb) {
    this.doNotDisturb = doNotDisturb;
  }


  public ServiceVOIPAccountEditData enabled(@javax.annotation.Nullable Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Get enabled
   * @return enabled
   */
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(@javax.annotation.Nullable Boolean enabled) {
    this.enabled = enabled;
  }


  public ServiceVOIPAccountEditData musicOnHold(@javax.annotation.Nullable ModelsVOIPAccountMusicOnHold musicOnHold) {
    this.musicOnHold = musicOnHold;
    return this;
  }

  /**
   * Get musicOnHold
   * @return musicOnHold
   */
  @javax.annotation.Nullable
  public ModelsVOIPAccountMusicOnHold getMusicOnHold() {
    return musicOnHold;
  }

  public void setMusicOnHold(@javax.annotation.Nullable ModelsVOIPAccountMusicOnHold musicOnHold) {
    this.musicOnHold = musicOnHold;
  }


  public ServiceVOIPAccountEditData name(@javax.annotation.Nonnull String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nonnull String name) {
    this.name = name;
  }


  public ServiceVOIPAccountEditData timezone(@javax.annotation.Nonnull String timezone) {
    this.timezone = timezone;
    return this;
  }

  /**
   * Get timezone
   * @return timezone
   */
  @javax.annotation.Nonnull
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(@javax.annotation.Nonnull String timezone) {
    this.timezone = timezone;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceVOIPAccountEditData serviceVOIPAccountEditData = (ServiceVOIPAccountEditData) o;
    return Objects.equals(this.callerId, serviceVOIPAccountEditData.callerId) &&
        Objects.equals(this.doNotDisturb, serviceVOIPAccountEditData.doNotDisturb) &&
        Objects.equals(this.enabled, serviceVOIPAccountEditData.enabled) &&
        Objects.equals(this.musicOnHold, serviceVOIPAccountEditData.musicOnHold) &&
        Objects.equals(this.name, serviceVOIPAccountEditData.name) &&
        Objects.equals(this.timezone, serviceVOIPAccountEditData.timezone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(callerId, doNotDisturb, enabled, musicOnHold, name, timezone);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceVOIPAccountEditData {\n");
    sb.append("    callerId: ").append(toIndentedString(callerId)).append("\n");
    sb.append("    doNotDisturb: ").append(toIndentedString(doNotDisturb)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    musicOnHold: ").append(toIndentedString(musicOnHold)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("caller_id", "do_not_disturb", "enabled", "music_on_hold", "name", "timezone"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(Arrays.asList("name", "timezone"));
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ServiceVOIPAccountEditData
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ServiceVOIPAccountEditData.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ServiceVOIPAccountEditData is not found in the empty JSON string", ServiceVOIPAccountEditData.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ServiceVOIPAccountEditData.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ServiceVOIPAccountEditData` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ServiceVOIPAccountEditData.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `caller_id`
      if (jsonObj.get("caller_id") != null && !jsonObj.get("caller_id").isJsonNull()) {
        ModelsVOIPAccountOutputFullCallerid.validateJsonElement(jsonObj.get("caller_id"));
      }
      // validate the optional field `do_not_disturb`
      if (jsonObj.get("do_not_disturb") != null && !jsonObj.get("do_not_disturb").isJsonNull()) {
        ModelsVOIPSharedDoNotDisturb.validateJsonElement(jsonObj.get("do_not_disturb"));
      }
      // validate the optional field `music_on_hold`
      if (jsonObj.get("music_on_hold") != null && !jsonObj.get("music_on_hold").isJsonNull()) {
        ModelsVOIPAccountMusicOnHold.validateJsonElement(jsonObj.get("music_on_hold"));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (!jsonObj.get("timezone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timezone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timezone").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ServiceVOIPAccountEditData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ServiceVOIPAccountEditData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ServiceVOIPAccountEditData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ServiceVOIPAccountEditData.class));

       return (TypeAdapter<T>) new TypeAdapter<ServiceVOIPAccountEditData>() {
           @Override
           public void write(JsonWriter out, ServiceVOIPAccountEditData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ServiceVOIPAccountEditData read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ServiceVOIPAccountEditData given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ServiceVOIPAccountEditData
   * @throws IOException if the JSON string is invalid with respect to ServiceVOIPAccountEditData
   */
  public static ServiceVOIPAccountEditData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ServiceVOIPAccountEditData.class);
  }

  /**
   * Convert an instance of ServiceVOIPAccountEditData to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

