/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ServiceSystemStatusVOIPService
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class ServiceSystemStatusVOIPService {
  public static final String SERIALIZED_NAME_APPS = "apps";
  @SerializedName(SERIALIZED_NAME_APPS)
  @javax.annotation.Nullable
  private String apps;

  public static final String SERIALIZED_NAME_BACKEND = "backend";
  @SerializedName(SERIALIZED_NAME_BACKEND)
  @javax.annotation.Nullable
  private String backend;

  public static final String SERIALIZED_NAME_CALL_MANAGER = "call_manager";
  @SerializedName(SERIALIZED_NAME_CALL_MANAGER)
  @javax.annotation.Nullable
  private String callManager;

  public static final String SERIALIZED_NAME_MEDIA_SERVER = "media_server";
  @SerializedName(SERIALIZED_NAME_MEDIA_SERVER)
  @javax.annotation.Nullable
  private String mediaServer;

  public static final String SERIALIZED_NAME_MESSAGE_BROKER = "message_broker";
  @SerializedName(SERIALIZED_NAME_MESSAGE_BROKER)
  @javax.annotation.Nullable
  private String messageBroker;

  public static final String SERIALIZED_NAME_SIP_PROXY = "sip_proxy";
  @SerializedName(SERIALIZED_NAME_SIP_PROXY)
  @javax.annotation.Nullable
  private String sipProxy;

  public ServiceSystemStatusVOIPService() {
  }

  public ServiceSystemStatusVOIPService apps(@javax.annotation.Nullable String apps) {
    this.apps = apps;
    return this;
  }

  /**
   * Get apps
   * @return apps
   */
  @javax.annotation.Nullable
  public String getApps() {
    return apps;
  }

  public void setApps(@javax.annotation.Nullable String apps) {
    this.apps = apps;
  }


  public ServiceSystemStatusVOIPService backend(@javax.annotation.Nullable String backend) {
    this.backend = backend;
    return this;
  }

  /**
   * Get backend
   * @return backend
   */
  @javax.annotation.Nullable
  public String getBackend() {
    return backend;
  }

  public void setBackend(@javax.annotation.Nullable String backend) {
    this.backend = backend;
  }


  public ServiceSystemStatusVOIPService callManager(@javax.annotation.Nullable String callManager) {
    this.callManager = callManager;
    return this;
  }

  /**
   * Get callManager
   * @return callManager
   */
  @javax.annotation.Nullable
  public String getCallManager() {
    return callManager;
  }

  public void setCallManager(@javax.annotation.Nullable String callManager) {
    this.callManager = callManager;
  }


  public ServiceSystemStatusVOIPService mediaServer(@javax.annotation.Nullable String mediaServer) {
    this.mediaServer = mediaServer;
    return this;
  }

  /**
   * Get mediaServer
   * @return mediaServer
   */
  @javax.annotation.Nullable
  public String getMediaServer() {
    return mediaServer;
  }

  public void setMediaServer(@javax.annotation.Nullable String mediaServer) {
    this.mediaServer = mediaServer;
  }


  public ServiceSystemStatusVOIPService messageBroker(@javax.annotation.Nullable String messageBroker) {
    this.messageBroker = messageBroker;
    return this;
  }

  /**
   * Get messageBroker
   * @return messageBroker
   */
  @javax.annotation.Nullable
  public String getMessageBroker() {
    return messageBroker;
  }

  public void setMessageBroker(@javax.annotation.Nullable String messageBroker) {
    this.messageBroker = messageBroker;
  }


  public ServiceSystemStatusVOIPService sipProxy(@javax.annotation.Nullable String sipProxy) {
    this.sipProxy = sipProxy;
    return this;
  }

  /**
   * Get sipProxy
   * @return sipProxy
   */
  @javax.annotation.Nullable
  public String getSipProxy() {
    return sipProxy;
  }

  public void setSipProxy(@javax.annotation.Nullable String sipProxy) {
    this.sipProxy = sipProxy;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceSystemStatusVOIPService serviceSystemStatusVOIPService = (ServiceSystemStatusVOIPService) o;
    return Objects.equals(this.apps, serviceSystemStatusVOIPService.apps) &&
        Objects.equals(this.backend, serviceSystemStatusVOIPService.backend) &&
        Objects.equals(this.callManager, serviceSystemStatusVOIPService.callManager) &&
        Objects.equals(this.mediaServer, serviceSystemStatusVOIPService.mediaServer) &&
        Objects.equals(this.messageBroker, serviceSystemStatusVOIPService.messageBroker) &&
        Objects.equals(this.sipProxy, serviceSystemStatusVOIPService.sipProxy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apps, backend, callManager, mediaServer, messageBroker, sipProxy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceSystemStatusVOIPService {\n");
    sb.append("    apps: ").append(toIndentedString(apps)).append("\n");
    sb.append("    backend: ").append(toIndentedString(backend)).append("\n");
    sb.append("    callManager: ").append(toIndentedString(callManager)).append("\n");
    sb.append("    mediaServer: ").append(toIndentedString(mediaServer)).append("\n");
    sb.append("    messageBroker: ").append(toIndentedString(messageBroker)).append("\n");
    sb.append("    sipProxy: ").append(toIndentedString(sipProxy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("apps");
    openapiFields.add("backend");
    openapiFields.add("call_manager");
    openapiFields.add("media_server");
    openapiFields.add("message_broker");
    openapiFields.add("sip_proxy");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ServiceSystemStatusVOIPService
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ServiceSystemStatusVOIPService.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ServiceSystemStatusVOIPService is not found in the empty JSON string", ServiceSystemStatusVOIPService.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ServiceSystemStatusVOIPService.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ServiceSystemStatusVOIPService` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("apps") != null && !jsonObj.get("apps").isJsonNull()) && !jsonObj.get("apps").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apps` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apps").toString()));
      }
      if ((jsonObj.get("backend") != null && !jsonObj.get("backend").isJsonNull()) && !jsonObj.get("backend").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `backend` to be a primitive type in the JSON string but got `%s`", jsonObj.get("backend").toString()));
      }
      if ((jsonObj.get("call_manager") != null && !jsonObj.get("call_manager").isJsonNull()) && !jsonObj.get("call_manager").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `call_manager` to be a primitive type in the JSON string but got `%s`", jsonObj.get("call_manager").toString()));
      }
      if ((jsonObj.get("media_server") != null && !jsonObj.get("media_server").isJsonNull()) && !jsonObj.get("media_server").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `media_server` to be a primitive type in the JSON string but got `%s`", jsonObj.get("media_server").toString()));
      }
      if ((jsonObj.get("message_broker") != null && !jsonObj.get("message_broker").isJsonNull()) && !jsonObj.get("message_broker").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `message_broker` to be a primitive type in the JSON string but got `%s`", jsonObj.get("message_broker").toString()));
      }
      if ((jsonObj.get("sip_proxy") != null && !jsonObj.get("sip_proxy").isJsonNull()) && !jsonObj.get("sip_proxy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sip_proxy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sip_proxy").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ServiceSystemStatusVOIPService.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ServiceSystemStatusVOIPService' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ServiceSystemStatusVOIPService> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ServiceSystemStatusVOIPService.class));

       return (TypeAdapter<T>) new TypeAdapter<ServiceSystemStatusVOIPService>() {
           @Override
           public void write(JsonWriter out, ServiceSystemStatusVOIPService value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ServiceSystemStatusVOIPService read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ServiceSystemStatusVOIPService given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ServiceSystemStatusVOIPService
   * @throws IOException if the JSON string is invalid with respect to ServiceSystemStatusVOIPService
   */
  public static ServiceSystemStatusVOIPService fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ServiceSystemStatusVOIPService.class);
  }

  /**
   * Convert an instance of ServiceSystemStatusVOIPService to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

