/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ServiceVOIPCallQueueAddEditData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class ServiceVOIPCallQueueAddEditData {
  public static final String SERIALIZED_NAME_AGENT_WRAPUP_TIME = "agent_wrapup_time";
  @SerializedName(SERIALIZED_NAME_AGENT_WRAPUP_TIME)
  @javax.annotation.Nullable
  private Integer agentWrapupTime;

  public static final String SERIALIZED_NAME_FEATURES = "features";
  @SerializedName(SERIALIZED_NAME_FEATURES)
  @javax.annotation.Nullable
  private Map<String, Object> features = new HashMap<>();

  public static final String SERIALIZED_NAME_FORCE_AWAY_ON_REJECT = "force_away_on_reject";
  @SerializedName(SERIALIZED_NAME_FORCE_AWAY_ON_REJECT)
  @javax.annotation.Nullable
  private Boolean forceAwayOnReject;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nonnull
  private String name;

  public static final String SERIALIZED_NAME_QUEUE_ROUTER = "queue_router";
  @SerializedName(SERIALIZED_NAME_QUEUE_ROUTER)
  @javax.annotation.Nullable
  private String queueRouter;

  public static final String SERIALIZED_NAME_QUEUE_TYPE = "queue_type";
  @SerializedName(SERIALIZED_NAME_QUEUE_TYPE)
  @javax.annotation.Nullable
  private String queueType;

  public static final String SERIALIZED_NAME_RING_TIMEOUT = "ring_timeout";
  @SerializedName(SERIALIZED_NAME_RING_TIMEOUT)
  @javax.annotation.Nullable
  private Integer ringTimeout;

  public static final String SERIALIZED_NAME_TICK_TIME = "tick_time";
  @SerializedName(SERIALIZED_NAME_TICK_TIME)
  @javax.annotation.Nullable
  private Integer tickTime;

  public ServiceVOIPCallQueueAddEditData() {
  }

  public ServiceVOIPCallQueueAddEditData agentWrapupTime(@javax.annotation.Nullable Integer agentWrapupTime) {
    this.agentWrapupTime = agentWrapupTime;
    return this;
  }

  /**
   * Get agentWrapupTime
   * @return agentWrapupTime
   */
  @javax.annotation.Nullable
  public Integer getAgentWrapupTime() {
    return agentWrapupTime;
  }

  public void setAgentWrapupTime(@javax.annotation.Nullable Integer agentWrapupTime) {
    this.agentWrapupTime = agentWrapupTime;
  }


  public ServiceVOIPCallQueueAddEditData features(@javax.annotation.Nullable Map<String, Object> features) {
    this.features = features;
    return this;
  }

  public ServiceVOIPCallQueueAddEditData putFeaturesItem(String key, Object featuresItem) {
    if (this.features == null) {
      this.features = new HashMap<>();
    }
    this.features.put(key, featuresItem);
    return this;
  }

  /**
   * Get features
   * @return features
   */
  @javax.annotation.Nullable
  public Map<String, Object> getFeatures() {
    return features;
  }

  public void setFeatures(@javax.annotation.Nullable Map<String, Object> features) {
    this.features = features;
  }


  public ServiceVOIPCallQueueAddEditData forceAwayOnReject(@javax.annotation.Nullable Boolean forceAwayOnReject) {
    this.forceAwayOnReject = forceAwayOnReject;
    return this;
  }

  /**
   * Get forceAwayOnReject
   * @return forceAwayOnReject
   */
  @javax.annotation.Nullable
  public Boolean getForceAwayOnReject() {
    return forceAwayOnReject;
  }

  public void setForceAwayOnReject(@javax.annotation.Nullable Boolean forceAwayOnReject) {
    this.forceAwayOnReject = forceAwayOnReject;
  }


  public ServiceVOIPCallQueueAddEditData name(@javax.annotation.Nonnull String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nonnull String name) {
    this.name = name;
  }


  public ServiceVOIPCallQueueAddEditData queueRouter(@javax.annotation.Nullable String queueRouter) {
    this.queueRouter = queueRouter;
    return this;
  }

  /**
   * Get queueRouter
   * @return queueRouter
   */
  @javax.annotation.Nullable
  public String getQueueRouter() {
    return queueRouter;
  }

  public void setQueueRouter(@javax.annotation.Nullable String queueRouter) {
    this.queueRouter = queueRouter;
  }


  public ServiceVOIPCallQueueAddEditData queueType(@javax.annotation.Nullable String queueType) {
    this.queueType = queueType;
    return this;
  }

  /**
   * Get queueType
   * @return queueType
   */
  @javax.annotation.Nullable
  public String getQueueType() {
    return queueType;
  }

  public void setQueueType(@javax.annotation.Nullable String queueType) {
    this.queueType = queueType;
  }


  public ServiceVOIPCallQueueAddEditData ringTimeout(@javax.annotation.Nullable Integer ringTimeout) {
    this.ringTimeout = ringTimeout;
    return this;
  }

  /**
   * Get ringTimeout
   * @return ringTimeout
   */
  @javax.annotation.Nullable
  public Integer getRingTimeout() {
    return ringTimeout;
  }

  public void setRingTimeout(@javax.annotation.Nullable Integer ringTimeout) {
    this.ringTimeout = ringTimeout;
  }


  public ServiceVOIPCallQueueAddEditData tickTime(@javax.annotation.Nullable Integer tickTime) {
    this.tickTime = tickTime;
    return this;
  }

  /**
   * Get tickTime
   * @return tickTime
   */
  @javax.annotation.Nullable
  public Integer getTickTime() {
    return tickTime;
  }

  public void setTickTime(@javax.annotation.Nullable Integer tickTime) {
    this.tickTime = tickTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceVOIPCallQueueAddEditData serviceVOIPCallQueueAddEditData = (ServiceVOIPCallQueueAddEditData) o;
    return Objects.equals(this.agentWrapupTime, serviceVOIPCallQueueAddEditData.agentWrapupTime) &&
        Objects.equals(this.features, serviceVOIPCallQueueAddEditData.features) &&
        Objects.equals(this.forceAwayOnReject, serviceVOIPCallQueueAddEditData.forceAwayOnReject) &&
        Objects.equals(this.name, serviceVOIPCallQueueAddEditData.name) &&
        Objects.equals(this.queueRouter, serviceVOIPCallQueueAddEditData.queueRouter) &&
        Objects.equals(this.queueType, serviceVOIPCallQueueAddEditData.queueType) &&
        Objects.equals(this.ringTimeout, serviceVOIPCallQueueAddEditData.ringTimeout) &&
        Objects.equals(this.tickTime, serviceVOIPCallQueueAddEditData.tickTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentWrapupTime, features, forceAwayOnReject, name, queueRouter, queueType, ringTimeout, tickTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceVOIPCallQueueAddEditData {\n");
    sb.append("    agentWrapupTime: ").append(toIndentedString(agentWrapupTime)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    forceAwayOnReject: ").append(toIndentedString(forceAwayOnReject)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    queueRouter: ").append(toIndentedString(queueRouter)).append("\n");
    sb.append("    queueType: ").append(toIndentedString(queueType)).append("\n");
    sb.append("    ringTimeout: ").append(toIndentedString(ringTimeout)).append("\n");
    sb.append("    tickTime: ").append(toIndentedString(tickTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("agent_wrapup_time", "features", "force_away_on_reject", "name", "queue_router", "queue_type", "ring_timeout", "tick_time"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(Arrays.asList("name"));
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ServiceVOIPCallQueueAddEditData
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ServiceVOIPCallQueueAddEditData.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ServiceVOIPCallQueueAddEditData is not found in the empty JSON string", ServiceVOIPCallQueueAddEditData.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ServiceVOIPCallQueueAddEditData.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ServiceVOIPCallQueueAddEditData` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ServiceVOIPCallQueueAddEditData.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("queue_router") != null && !jsonObj.get("queue_router").isJsonNull()) && !jsonObj.get("queue_router").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `queue_router` to be a primitive type in the JSON string but got `%s`", jsonObj.get("queue_router").toString()));
      }
      if ((jsonObj.get("queue_type") != null && !jsonObj.get("queue_type").isJsonNull()) && !jsonObj.get("queue_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `queue_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("queue_type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ServiceVOIPCallQueueAddEditData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ServiceVOIPCallQueueAddEditData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ServiceVOIPCallQueueAddEditData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ServiceVOIPCallQueueAddEditData.class));

       return (TypeAdapter<T>) new TypeAdapter<ServiceVOIPCallQueueAddEditData>() {
           @Override
           public void write(JsonWriter out, ServiceVOIPCallQueueAddEditData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ServiceVOIPCallQueueAddEditData read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ServiceVOIPCallQueueAddEditData given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ServiceVOIPCallQueueAddEditData
   * @throws IOException if the JSON string is invalid with respect to ServiceVOIPCallQueueAddEditData
   */
  public static ServiceVOIPCallQueueAddEditData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ServiceVOIPCallQueueAddEditData.class);
  }

  /**
   * Convert an instance of ServiceVOIPCallQueueAddEditData to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

