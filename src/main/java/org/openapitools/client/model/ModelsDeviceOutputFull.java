/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ModelsCallForward;
import org.openapitools.client.model.ModelsCallRecordingSettings;
import org.openapitools.client.model.ModelsDeviceOutputFullCallerid;
import org.openapitools.client.model.ModelsDeviceOutputFullMedia;
import org.openapitools.client.model.ModelsDeviceOutputFullProvision;
import org.openapitools.client.model.ModelsDeviceOutputFullSIP;
import org.openapitools.client.model.ModelsMusicOnHold;
import org.openapitools.client.model.ModelsVOIPSharedDoNotDisturb;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ModelsDeviceOutputFull
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class ModelsDeviceOutputFull {
  public static final String SERIALIZED_NAME_CALL_FORWARD = "call_forward";
  @SerializedName(SERIALIZED_NAME_CALL_FORWARD)
  @javax.annotation.Nullable
  private ModelsCallForward callForward;

  public static final String SERIALIZED_NAME_CALL_RECORDING = "call_recording";
  @SerializedName(SERIALIZED_NAME_CALL_RECORDING)
  @javax.annotation.Nullable
  private ModelsCallRecordingSettings callRecording;

  public static final String SERIALIZED_NAME_CALLER_ID = "caller_id";
  @SerializedName(SERIALIZED_NAME_CALLER_ID)
  @javax.annotation.Nullable
  private ModelsDeviceOutputFullCallerid callerId;

  public static final String SERIALIZED_NAME_DEVICE_TYPE = "device_type";
  @SerializedName(SERIALIZED_NAME_DEVICE_TYPE)
  @javax.annotation.Nullable
  private String deviceType;

  public static final String SERIALIZED_NAME_DO_NOT_DISTURB = "do_not_disturb";
  @SerializedName(SERIALIZED_NAME_DO_NOT_DISTURB)
  @javax.annotation.Nullable
  private ModelsVOIPSharedDoNotDisturb doNotDisturb;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  @javax.annotation.Nullable
  private Boolean enabled;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private String id;

  public static final String SERIALIZED_NAME_MAC_ADDRESS = "mac_address";
  @SerializedName(SERIALIZED_NAME_MAC_ADDRESS)
  @javax.annotation.Nullable
  private String macAddress;

  public static final String SERIALIZED_NAME_MEDIA = "media";
  @SerializedName(SERIALIZED_NAME_MEDIA)
  @javax.annotation.Nullable
  private ModelsDeviceOutputFullMedia media;

  public static final String SERIALIZED_NAME_MUSIC_ON_HOLD = "music_on_hold";
  @SerializedName(SERIALIZED_NAME_MUSIC_ON_HOLD)
  @javax.annotation.Nullable
  private ModelsMusicOnHold musicOnHold;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nullable
  private String name;

  public static final String SERIALIZED_NAME_OWNER_ID = "owner_id";
  @SerializedName(SERIALIZED_NAME_OWNER_ID)
  @javax.annotation.Nullable
  private String ownerId;

  public static final String SERIALIZED_NAME_PROVISION = "provision";
  @SerializedName(SERIALIZED_NAME_PROVISION)
  @javax.annotation.Nullable
  private ModelsDeviceOutputFullProvision provision;

  public static final String SERIALIZED_NAME_SIP = "sip";
  @SerializedName(SERIALIZED_NAME_SIP)
  @javax.annotation.Nullable
  private ModelsDeviceOutputFullSIP sip;

  public ModelsDeviceOutputFull() {
  }

  public ModelsDeviceOutputFull callForward(@javax.annotation.Nullable ModelsCallForward callForward) {
    this.callForward = callForward;
    return this;
  }

  /**
   * Get callForward
   * @return callForward
   */
  @javax.annotation.Nullable
  public ModelsCallForward getCallForward() {
    return callForward;
  }

  public void setCallForward(@javax.annotation.Nullable ModelsCallForward callForward) {
    this.callForward = callForward;
  }


  public ModelsDeviceOutputFull callRecording(@javax.annotation.Nullable ModelsCallRecordingSettings callRecording) {
    this.callRecording = callRecording;
    return this;
  }

  /**
   * Get callRecording
   * @return callRecording
   */
  @javax.annotation.Nullable
  public ModelsCallRecordingSettings getCallRecording() {
    return callRecording;
  }

  public void setCallRecording(@javax.annotation.Nullable ModelsCallRecordingSettings callRecording) {
    this.callRecording = callRecording;
  }


  public ModelsDeviceOutputFull callerId(@javax.annotation.Nullable ModelsDeviceOutputFullCallerid callerId) {
    this.callerId = callerId;
    return this;
  }

  /**
   * Get callerId
   * @return callerId
   */
  @javax.annotation.Nullable
  public ModelsDeviceOutputFullCallerid getCallerId() {
    return callerId;
  }

  public void setCallerId(@javax.annotation.Nullable ModelsDeviceOutputFullCallerid callerId) {
    this.callerId = callerId;
  }


  public ModelsDeviceOutputFull deviceType(@javax.annotation.Nullable String deviceType) {
    this.deviceType = deviceType;
    return this;
  }

  /**
   * Get deviceType
   * @return deviceType
   */
  @javax.annotation.Nullable
  public String getDeviceType() {
    return deviceType;
  }

  public void setDeviceType(@javax.annotation.Nullable String deviceType) {
    this.deviceType = deviceType;
  }


  public ModelsDeviceOutputFull doNotDisturb(@javax.annotation.Nullable ModelsVOIPSharedDoNotDisturb doNotDisturb) {
    this.doNotDisturb = doNotDisturb;
    return this;
  }

  /**
   * Get doNotDisturb
   * @return doNotDisturb
   */
  @javax.annotation.Nullable
  public ModelsVOIPSharedDoNotDisturb getDoNotDisturb() {
    return doNotDisturb;
  }

  public void setDoNotDisturb(@javax.annotation.Nullable ModelsVOIPSharedDoNotDisturb doNotDisturb) {
    this.doNotDisturb = doNotDisturb;
  }


  public ModelsDeviceOutputFull enabled(@javax.annotation.Nullable Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Get enabled
   * @return enabled
   */
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(@javax.annotation.Nullable Boolean enabled) {
    this.enabled = enabled;
  }


  public ModelsDeviceOutputFull id(@javax.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }


  public ModelsDeviceOutputFull macAddress(@javax.annotation.Nullable String macAddress) {
    this.macAddress = macAddress;
    return this;
  }

  /**
   * Get macAddress
   * @return macAddress
   */
  @javax.annotation.Nullable
  public String getMacAddress() {
    return macAddress;
  }

  public void setMacAddress(@javax.annotation.Nullable String macAddress) {
    this.macAddress = macAddress;
  }


  public ModelsDeviceOutputFull media(@javax.annotation.Nullable ModelsDeviceOutputFullMedia media) {
    this.media = media;
    return this;
  }

  /**
   * Get media
   * @return media
   */
  @javax.annotation.Nullable
  public ModelsDeviceOutputFullMedia getMedia() {
    return media;
  }

  public void setMedia(@javax.annotation.Nullable ModelsDeviceOutputFullMedia media) {
    this.media = media;
  }


  public ModelsDeviceOutputFull musicOnHold(@javax.annotation.Nullable ModelsMusicOnHold musicOnHold) {
    this.musicOnHold = musicOnHold;
    return this;
  }

  /**
   * Get musicOnHold
   * @return musicOnHold
   */
  @javax.annotation.Nullable
  public ModelsMusicOnHold getMusicOnHold() {
    return musicOnHold;
  }

  public void setMusicOnHold(@javax.annotation.Nullable ModelsMusicOnHold musicOnHold) {
    this.musicOnHold = musicOnHold;
  }


  public ModelsDeviceOutputFull name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public ModelsDeviceOutputFull ownerId(@javax.annotation.Nullable String ownerId) {
    this.ownerId = ownerId;
    return this;
  }

  /**
   * Get ownerId
   * @return ownerId
   */
  @javax.annotation.Nullable
  public String getOwnerId() {
    return ownerId;
  }

  public void setOwnerId(@javax.annotation.Nullable String ownerId) {
    this.ownerId = ownerId;
  }


  public ModelsDeviceOutputFull provision(@javax.annotation.Nullable ModelsDeviceOutputFullProvision provision) {
    this.provision = provision;
    return this;
  }

  /**
   * Get provision
   * @return provision
   */
  @javax.annotation.Nullable
  public ModelsDeviceOutputFullProvision getProvision() {
    return provision;
  }

  public void setProvision(@javax.annotation.Nullable ModelsDeviceOutputFullProvision provision) {
    this.provision = provision;
  }


  public ModelsDeviceOutputFull sip(@javax.annotation.Nullable ModelsDeviceOutputFullSIP sip) {
    this.sip = sip;
    return this;
  }

  /**
   * Get sip
   * @return sip
   */
  @javax.annotation.Nullable
  public ModelsDeviceOutputFullSIP getSip() {
    return sip;
  }

  public void setSip(@javax.annotation.Nullable ModelsDeviceOutputFullSIP sip) {
    this.sip = sip;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelsDeviceOutputFull modelsDeviceOutputFull = (ModelsDeviceOutputFull) o;
    return Objects.equals(this.callForward, modelsDeviceOutputFull.callForward) &&
        Objects.equals(this.callRecording, modelsDeviceOutputFull.callRecording) &&
        Objects.equals(this.callerId, modelsDeviceOutputFull.callerId) &&
        Objects.equals(this.deviceType, modelsDeviceOutputFull.deviceType) &&
        Objects.equals(this.doNotDisturb, modelsDeviceOutputFull.doNotDisturb) &&
        Objects.equals(this.enabled, modelsDeviceOutputFull.enabled) &&
        Objects.equals(this.id, modelsDeviceOutputFull.id) &&
        Objects.equals(this.macAddress, modelsDeviceOutputFull.macAddress) &&
        Objects.equals(this.media, modelsDeviceOutputFull.media) &&
        Objects.equals(this.musicOnHold, modelsDeviceOutputFull.musicOnHold) &&
        Objects.equals(this.name, modelsDeviceOutputFull.name) &&
        Objects.equals(this.ownerId, modelsDeviceOutputFull.ownerId) &&
        Objects.equals(this.provision, modelsDeviceOutputFull.provision) &&
        Objects.equals(this.sip, modelsDeviceOutputFull.sip);
  }

  @Override
  public int hashCode() {
    return Objects.hash(callForward, callRecording, callerId, deviceType, doNotDisturb, enabled, id, macAddress, media, musicOnHold, name, ownerId, provision, sip);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelsDeviceOutputFull {\n");
    sb.append("    callForward: ").append(toIndentedString(callForward)).append("\n");
    sb.append("    callRecording: ").append(toIndentedString(callRecording)).append("\n");
    sb.append("    callerId: ").append(toIndentedString(callerId)).append("\n");
    sb.append("    deviceType: ").append(toIndentedString(deviceType)).append("\n");
    sb.append("    doNotDisturb: ").append(toIndentedString(doNotDisturb)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    macAddress: ").append(toIndentedString(macAddress)).append("\n");
    sb.append("    media: ").append(toIndentedString(media)).append("\n");
    sb.append("    musicOnHold: ").append(toIndentedString(musicOnHold)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
    sb.append("    provision: ").append(toIndentedString(provision)).append("\n");
    sb.append("    sip: ").append(toIndentedString(sip)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("call_forward", "call_recording", "caller_id", "device_type", "do_not_disturb", "enabled", "id", "mac_address", "media", "music_on_hold", "name", "owner_id", "provision", "sip"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ModelsDeviceOutputFull
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModelsDeviceOutputFull.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModelsDeviceOutputFull is not found in the empty JSON string", ModelsDeviceOutputFull.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModelsDeviceOutputFull.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModelsDeviceOutputFull` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `call_forward`
      if (jsonObj.get("call_forward") != null && !jsonObj.get("call_forward").isJsonNull()) {
        ModelsCallForward.validateJsonElement(jsonObj.get("call_forward"));
      }
      // validate the optional field `call_recording`
      if (jsonObj.get("call_recording") != null && !jsonObj.get("call_recording").isJsonNull()) {
        ModelsCallRecordingSettings.validateJsonElement(jsonObj.get("call_recording"));
      }
      // validate the optional field `caller_id`
      if (jsonObj.get("caller_id") != null && !jsonObj.get("caller_id").isJsonNull()) {
        ModelsDeviceOutputFullCallerid.validateJsonElement(jsonObj.get("caller_id"));
      }
      if ((jsonObj.get("device_type") != null && !jsonObj.get("device_type").isJsonNull()) && !jsonObj.get("device_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `device_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("device_type").toString()));
      }
      // validate the optional field `do_not_disturb`
      if (jsonObj.get("do_not_disturb") != null && !jsonObj.get("do_not_disturb").isJsonNull()) {
        ModelsVOIPSharedDoNotDisturb.validateJsonElement(jsonObj.get("do_not_disturb"));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("mac_address") != null && !jsonObj.get("mac_address").isJsonNull()) && !jsonObj.get("mac_address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mac_address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mac_address").toString()));
      }
      // validate the optional field `media`
      if (jsonObj.get("media") != null && !jsonObj.get("media").isJsonNull()) {
        ModelsDeviceOutputFullMedia.validateJsonElement(jsonObj.get("media"));
      }
      // validate the optional field `music_on_hold`
      if (jsonObj.get("music_on_hold") != null && !jsonObj.get("music_on_hold").isJsonNull()) {
        ModelsMusicOnHold.validateJsonElement(jsonObj.get("music_on_hold"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("owner_id") != null && !jsonObj.get("owner_id").isJsonNull()) && !jsonObj.get("owner_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `owner_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("owner_id").toString()));
      }
      // validate the optional field `provision`
      if (jsonObj.get("provision") != null && !jsonObj.get("provision").isJsonNull()) {
        ModelsDeviceOutputFullProvision.validateJsonElement(jsonObj.get("provision"));
      }
      // validate the optional field `sip`
      if (jsonObj.get("sip") != null && !jsonObj.get("sip").isJsonNull()) {
        ModelsDeviceOutputFullSIP.validateJsonElement(jsonObj.get("sip"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModelsDeviceOutputFull.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModelsDeviceOutputFull' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModelsDeviceOutputFull> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModelsDeviceOutputFull.class));

       return (TypeAdapter<T>) new TypeAdapter<ModelsDeviceOutputFull>() {
           @Override
           public void write(JsonWriter out, ModelsDeviceOutputFull value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModelsDeviceOutputFull read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ModelsDeviceOutputFull given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ModelsDeviceOutputFull
   * @throws IOException if the JSON string is invalid with respect to ModelsDeviceOutputFull
   */
  public static ModelsDeviceOutputFull fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModelsDeviceOutputFull.class);
  }

  /**
   * Convert an instance of ModelsDeviceOutputFull to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

