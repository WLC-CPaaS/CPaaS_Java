/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ServiceVOIPVoicemailMessageAddData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class ServiceVOIPVoicemailMessageAddData {
  public static final String SERIALIZED_NAME_CALLER_ID_NAME = "caller_id_name";
  @SerializedName(SERIALIZED_NAME_CALLER_ID_NAME)
  @javax.annotation.Nullable
  private String callerIdName;

  public static final String SERIALIZED_NAME_CALLER_ID_NUMBER = "caller_id_number";
  @SerializedName(SERIALIZED_NAME_CALLER_ID_NUMBER)
  @javax.annotation.Nullable
  private String callerIdNumber;

  /**
   * Gets or Sets folder
   */
  @JsonAdapter(FolderEnum.Adapter.class)
  public enum FolderEnum {
    DELETED("deleted"),
    
    SAVED("saved"),
    
    NEW("new");

    private String value;

    FolderEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FolderEnum fromValue(String value) {
      for (FolderEnum b : FolderEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FolderEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FolderEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FolderEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FolderEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      FolderEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_FOLDER = "folder";
  @SerializedName(SERIALIZED_NAME_FOLDER)
  @javax.annotation.Nonnull
  private FolderEnum folder;

  public static final String SERIALIZED_NAME_FROM = "from";
  @SerializedName(SERIALIZED_NAME_FROM)
  @javax.annotation.Nullable
  private String from;

  public static final String SERIALIZED_NAME_TO = "to";
  @SerializedName(SERIALIZED_NAME_TO)
  @javax.annotation.Nullable
  private String to;

  public ServiceVOIPVoicemailMessageAddData() {
  }

  public ServiceVOIPVoicemailMessageAddData callerIdName(@javax.annotation.Nullable String callerIdName) {
    this.callerIdName = callerIdName;
    return this;
  }

  /**
   * Get callerIdName
   * @return callerIdName
   */
  @javax.annotation.Nullable
  public String getCallerIdName() {
    return callerIdName;
  }

  public void setCallerIdName(@javax.annotation.Nullable String callerIdName) {
    this.callerIdName = callerIdName;
  }


  public ServiceVOIPVoicemailMessageAddData callerIdNumber(@javax.annotation.Nullable String callerIdNumber) {
    this.callerIdNumber = callerIdNumber;
    return this;
  }

  /**
   * Get callerIdNumber
   * @return callerIdNumber
   */
  @javax.annotation.Nullable
  public String getCallerIdNumber() {
    return callerIdNumber;
  }

  public void setCallerIdNumber(@javax.annotation.Nullable String callerIdNumber) {
    this.callerIdNumber = callerIdNumber;
  }


  public ServiceVOIPVoicemailMessageAddData folder(@javax.annotation.Nonnull FolderEnum folder) {
    this.folder = folder;
    return this;
  }

  /**
   * Get folder
   * @return folder
   */
  @javax.annotation.Nonnull
  public FolderEnum getFolder() {
    return folder;
  }

  public void setFolder(@javax.annotation.Nonnull FolderEnum folder) {
    this.folder = folder;
  }


  public ServiceVOIPVoicemailMessageAddData from(@javax.annotation.Nullable String from) {
    this.from = from;
    return this;
  }

  /**
   * Get from
   * @return from
   */
  @javax.annotation.Nullable
  public String getFrom() {
    return from;
  }

  public void setFrom(@javax.annotation.Nullable String from) {
    this.from = from;
  }


  public ServiceVOIPVoicemailMessageAddData to(@javax.annotation.Nullable String to) {
    this.to = to;
    return this;
  }

  /**
   * Get to
   * @return to
   */
  @javax.annotation.Nullable
  public String getTo() {
    return to;
  }

  public void setTo(@javax.annotation.Nullable String to) {
    this.to = to;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceVOIPVoicemailMessageAddData serviceVOIPVoicemailMessageAddData = (ServiceVOIPVoicemailMessageAddData) o;
    return Objects.equals(this.callerIdName, serviceVOIPVoicemailMessageAddData.callerIdName) &&
        Objects.equals(this.callerIdNumber, serviceVOIPVoicemailMessageAddData.callerIdNumber) &&
        Objects.equals(this.folder, serviceVOIPVoicemailMessageAddData.folder) &&
        Objects.equals(this.from, serviceVOIPVoicemailMessageAddData.from) &&
        Objects.equals(this.to, serviceVOIPVoicemailMessageAddData.to);
  }

  @Override
  public int hashCode() {
    return Objects.hash(callerIdName, callerIdNumber, folder, from, to);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceVOIPVoicemailMessageAddData {\n");
    sb.append("    callerIdName: ").append(toIndentedString(callerIdName)).append("\n");
    sb.append("    callerIdNumber: ").append(toIndentedString(callerIdNumber)).append("\n");
    sb.append("    folder: ").append(toIndentedString(folder)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("caller_id_name", "caller_id_number", "folder", "from", "to"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(Arrays.asList("folder"));
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ServiceVOIPVoicemailMessageAddData
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ServiceVOIPVoicemailMessageAddData.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ServiceVOIPVoicemailMessageAddData is not found in the empty JSON string", ServiceVOIPVoicemailMessageAddData.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ServiceVOIPVoicemailMessageAddData.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ServiceVOIPVoicemailMessageAddData` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ServiceVOIPVoicemailMessageAddData.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("caller_id_name") != null && !jsonObj.get("caller_id_name").isJsonNull()) && !jsonObj.get("caller_id_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `caller_id_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("caller_id_name").toString()));
      }
      if ((jsonObj.get("caller_id_number") != null && !jsonObj.get("caller_id_number").isJsonNull()) && !jsonObj.get("caller_id_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `caller_id_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("caller_id_number").toString()));
      }
      if (!jsonObj.get("folder").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `folder` to be a primitive type in the JSON string but got `%s`", jsonObj.get("folder").toString()));
      }
      // validate the required field `folder`
      FolderEnum.validateJsonElement(jsonObj.get("folder"));
      if ((jsonObj.get("from") != null && !jsonObj.get("from").isJsonNull()) && !jsonObj.get("from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("from").toString()));
      }
      if ((jsonObj.get("to") != null && !jsonObj.get("to").isJsonNull()) && !jsonObj.get("to").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `to` to be a primitive type in the JSON string but got `%s`", jsonObj.get("to").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ServiceVOIPVoicemailMessageAddData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ServiceVOIPVoicemailMessageAddData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ServiceVOIPVoicemailMessageAddData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ServiceVOIPVoicemailMessageAddData.class));

       return (TypeAdapter<T>) new TypeAdapter<ServiceVOIPVoicemailMessageAddData>() {
           @Override
           public void write(JsonWriter out, ServiceVOIPVoicemailMessageAddData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ServiceVOIPVoicemailMessageAddData read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ServiceVOIPVoicemailMessageAddData given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ServiceVOIPVoicemailMessageAddData
   * @throws IOException if the JSON string is invalid with respect to ServiceVOIPVoicemailMessageAddData
   */
  public static ServiceVOIPVoicemailMessageAddData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ServiceVOIPVoicemailMessageAddData.class);
  }

  /**
   * Convert an instance of ServiceVOIPVoicemailMessageAddData to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

