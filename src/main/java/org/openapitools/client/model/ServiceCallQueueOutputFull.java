/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ServiceCallQueueOutputFull
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class ServiceCallQueueOutputFull {
  public static final String SERIALIZED_NAME_AGENT_WRAPUP_TIME = "agent_wrapup_time";
  @SerializedName(SERIALIZED_NAME_AGENT_WRAPUP_TIME)
  @javax.annotation.Nullable
  private Integer agentWrapupTime;

  public static final String SERIALIZED_NAME_FEATURES = "features";
  @SerializedName(SERIALIZED_NAME_FEATURES)
  @javax.annotation.Nullable
  private Map<String, Object> features = new HashMap<>();

  public static final String SERIALIZED_NAME_FORCE_AWAY_ON_REJECT = "force_away_on_reject";
  @SerializedName(SERIALIZED_NAME_FORCE_AWAY_ON_REJECT)
  @javax.annotation.Nullable
  private Boolean forceAwayOnReject;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nullable
  private String name;

  public static final String SERIALIZED_NAME_QUEUE_ROUTER = "queue_router";
  @SerializedName(SERIALIZED_NAME_QUEUE_ROUTER)
  @javax.annotation.Nullable
  private String queueRouter;

  public static final String SERIALIZED_NAME_QUEUE_TYPE = "queue_type";
  @SerializedName(SERIALIZED_NAME_QUEUE_TYPE)
  @javax.annotation.Nullable
  private String queueType;

  public static final String SERIALIZED_NAME_RING_TIMEOUT = "ring_timeout";
  @SerializedName(SERIALIZED_NAME_RING_TIMEOUT)
  @javax.annotation.Nullable
  private Integer ringTimeout;

  public static final String SERIALIZED_NAME_TICK_TIME = "tick_time";
  @SerializedName(SERIALIZED_NAME_TICK_TIME)
  @javax.annotation.Nullable
  private Integer tickTime;

  public ServiceCallQueueOutputFull() {
  }

  public ServiceCallQueueOutputFull agentWrapupTime(@javax.annotation.Nullable Integer agentWrapupTime) {
    this.agentWrapupTime = agentWrapupTime;
    return this;
  }

  /**
   * Get agentWrapupTime
   * @return agentWrapupTime
   */
  @javax.annotation.Nullable
  public Integer getAgentWrapupTime() {
    return agentWrapupTime;
  }

  public void setAgentWrapupTime(@javax.annotation.Nullable Integer agentWrapupTime) {
    this.agentWrapupTime = agentWrapupTime;
  }


  public ServiceCallQueueOutputFull features(@javax.annotation.Nullable Map<String, Object> features) {
    this.features = features;
    return this;
  }

  public ServiceCallQueueOutputFull putFeaturesItem(String key, Object featuresItem) {
    if (this.features == null) {
      this.features = new HashMap<>();
    }
    this.features.put(key, featuresItem);
    return this;
  }

  /**
   * Get features
   * @return features
   */
  @javax.annotation.Nullable
  public Map<String, Object> getFeatures() {
    return features;
  }

  public void setFeatures(@javax.annotation.Nullable Map<String, Object> features) {
    this.features = features;
  }


  public ServiceCallQueueOutputFull forceAwayOnReject(@javax.annotation.Nullable Boolean forceAwayOnReject) {
    this.forceAwayOnReject = forceAwayOnReject;
    return this;
  }

  /**
   * Get forceAwayOnReject
   * @return forceAwayOnReject
   */
  @javax.annotation.Nullable
  public Boolean getForceAwayOnReject() {
    return forceAwayOnReject;
  }

  public void setForceAwayOnReject(@javax.annotation.Nullable Boolean forceAwayOnReject) {
    this.forceAwayOnReject = forceAwayOnReject;
  }


  public ServiceCallQueueOutputFull id(@javax.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }


  public ServiceCallQueueOutputFull name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public ServiceCallQueueOutputFull queueRouter(@javax.annotation.Nullable String queueRouter) {
    this.queueRouter = queueRouter;
    return this;
  }

  /**
   * Get queueRouter
   * @return queueRouter
   */
  @javax.annotation.Nullable
  public String getQueueRouter() {
    return queueRouter;
  }

  public void setQueueRouter(@javax.annotation.Nullable String queueRouter) {
    this.queueRouter = queueRouter;
  }


  public ServiceCallQueueOutputFull queueType(@javax.annotation.Nullable String queueType) {
    this.queueType = queueType;
    return this;
  }

  /**
   * Get queueType
   * @return queueType
   */
  @javax.annotation.Nullable
  public String getQueueType() {
    return queueType;
  }

  public void setQueueType(@javax.annotation.Nullable String queueType) {
    this.queueType = queueType;
  }


  public ServiceCallQueueOutputFull ringTimeout(@javax.annotation.Nullable Integer ringTimeout) {
    this.ringTimeout = ringTimeout;
    return this;
  }

  /**
   * Get ringTimeout
   * @return ringTimeout
   */
  @javax.annotation.Nullable
  public Integer getRingTimeout() {
    return ringTimeout;
  }

  public void setRingTimeout(@javax.annotation.Nullable Integer ringTimeout) {
    this.ringTimeout = ringTimeout;
  }


  public ServiceCallQueueOutputFull tickTime(@javax.annotation.Nullable Integer tickTime) {
    this.tickTime = tickTime;
    return this;
  }

  /**
   * Get tickTime
   * @return tickTime
   */
  @javax.annotation.Nullable
  public Integer getTickTime() {
    return tickTime;
  }

  public void setTickTime(@javax.annotation.Nullable Integer tickTime) {
    this.tickTime = tickTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceCallQueueOutputFull serviceCallQueueOutputFull = (ServiceCallQueueOutputFull) o;
    return Objects.equals(this.agentWrapupTime, serviceCallQueueOutputFull.agentWrapupTime) &&
        Objects.equals(this.features, serviceCallQueueOutputFull.features) &&
        Objects.equals(this.forceAwayOnReject, serviceCallQueueOutputFull.forceAwayOnReject) &&
        Objects.equals(this.id, serviceCallQueueOutputFull.id) &&
        Objects.equals(this.name, serviceCallQueueOutputFull.name) &&
        Objects.equals(this.queueRouter, serviceCallQueueOutputFull.queueRouter) &&
        Objects.equals(this.queueType, serviceCallQueueOutputFull.queueType) &&
        Objects.equals(this.ringTimeout, serviceCallQueueOutputFull.ringTimeout) &&
        Objects.equals(this.tickTime, serviceCallQueueOutputFull.tickTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentWrapupTime, features, forceAwayOnReject, id, name, queueRouter, queueType, ringTimeout, tickTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceCallQueueOutputFull {\n");
    sb.append("    agentWrapupTime: ").append(toIndentedString(agentWrapupTime)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    forceAwayOnReject: ").append(toIndentedString(forceAwayOnReject)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    queueRouter: ").append(toIndentedString(queueRouter)).append("\n");
    sb.append("    queueType: ").append(toIndentedString(queueType)).append("\n");
    sb.append("    ringTimeout: ").append(toIndentedString(ringTimeout)).append("\n");
    sb.append("    tickTime: ").append(toIndentedString(tickTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("agent_wrapup_time", "features", "force_away_on_reject", "id", "name", "queue_router", "queue_type", "ring_timeout", "tick_time"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ServiceCallQueueOutputFull
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ServiceCallQueueOutputFull.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ServiceCallQueueOutputFull is not found in the empty JSON string", ServiceCallQueueOutputFull.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ServiceCallQueueOutputFull.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ServiceCallQueueOutputFull` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("queue_router") != null && !jsonObj.get("queue_router").isJsonNull()) && !jsonObj.get("queue_router").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `queue_router` to be a primitive type in the JSON string but got `%s`", jsonObj.get("queue_router").toString()));
      }
      if ((jsonObj.get("queue_type") != null && !jsonObj.get("queue_type").isJsonNull()) && !jsonObj.get("queue_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `queue_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("queue_type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ServiceCallQueueOutputFull.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ServiceCallQueueOutputFull' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ServiceCallQueueOutputFull> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ServiceCallQueueOutputFull.class));

       return (TypeAdapter<T>) new TypeAdapter<ServiceCallQueueOutputFull>() {
           @Override
           public void write(JsonWriter out, ServiceCallQueueOutputFull value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ServiceCallQueueOutputFull read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ServiceCallQueueOutputFull given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ServiceCallQueueOutputFull
   * @throws IOException if the JSON string is invalid with respect to ServiceCallQueueOutputFull
   */
  public static ServiceCallQueueOutputFull fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ServiceCallQueueOutputFull.class);
  }

  /**
   * Convert an instance of ServiceCallQueueOutputFull to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

