/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ModelsCallForward;
import org.openapitools.client.model.ModelsCallRecordingSettings;
import org.openapitools.client.model.ModelsMusicOnHold;
import org.openapitools.client.model.ModelsUserOutputFullCallerid;
import org.openapitools.client.model.ModelsVOIPSharedDoNotDisturb;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ModelsUserOutputFull
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class ModelsUserOutputFull {
  public static final String SERIALIZED_NAME_CALL_FORWARD = "call_forward";
  @SerializedName(SERIALIZED_NAME_CALL_FORWARD)
  @javax.annotation.Nullable
  private ModelsCallForward callForward;

  public static final String SERIALIZED_NAME_CALL_RECORDING = "call_recording";
  @SerializedName(SERIALIZED_NAME_CALL_RECORDING)
  @javax.annotation.Nullable
  private ModelsCallRecordingSettings callRecording;

  public static final String SERIALIZED_NAME_CALLER_ID = "caller_id";
  @SerializedName(SERIALIZED_NAME_CALLER_ID)
  @javax.annotation.Nullable
  private ModelsUserOutputFullCallerid callerId;

  public static final String SERIALIZED_NAME_DO_NOT_DISTURB = "do_not_disturb";
  @SerializedName(SERIALIZED_NAME_DO_NOT_DISTURB)
  @javax.annotation.Nullable
  private ModelsVOIPSharedDoNotDisturb doNotDisturb;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  @javax.annotation.Nullable
  private String email;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  @javax.annotation.Nullable
  private Boolean enabled;

  public static final String SERIALIZED_NAME_FIRST_NAME = "first_name";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  @javax.annotation.Nullable
  private String firstName;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private String id;

  public static final String SERIALIZED_NAME_LAST_NAME = "last_name";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  @javax.annotation.Nullable
  private String lastName;

  public static final String SERIALIZED_NAME_MUSIC_ON_HOLD = "music_on_hold";
  @SerializedName(SERIALIZED_NAME_MUSIC_ON_HOLD)
  @javax.annotation.Nullable
  private ModelsMusicOnHold musicOnHold;

  public static final String SERIALIZED_NAME_PRESENCE_ID = "presence_id";
  @SerializedName(SERIALIZED_NAME_PRESENCE_ID)
  @javax.annotation.Nullable
  private String presenceId;

  public static final String SERIALIZED_NAME_TIMEZONE = "timezone";
  @SerializedName(SERIALIZED_NAME_TIMEZONE)
  @javax.annotation.Nullable
  private String timezone;

  public static final String SERIALIZED_NAME_VERIFIED = "verified";
  @SerializedName(SERIALIZED_NAME_VERIFIED)
  @javax.annotation.Nullable
  private Boolean verified;

  public ModelsUserOutputFull() {
  }

  public ModelsUserOutputFull callForward(@javax.annotation.Nullable ModelsCallForward callForward) {
    this.callForward = callForward;
    return this;
  }

  /**
   * Get callForward
   * @return callForward
   */
  @javax.annotation.Nullable
  public ModelsCallForward getCallForward() {
    return callForward;
  }

  public void setCallForward(@javax.annotation.Nullable ModelsCallForward callForward) {
    this.callForward = callForward;
  }


  public ModelsUserOutputFull callRecording(@javax.annotation.Nullable ModelsCallRecordingSettings callRecording) {
    this.callRecording = callRecording;
    return this;
  }

  /**
   * Get callRecording
   * @return callRecording
   */
  @javax.annotation.Nullable
  public ModelsCallRecordingSettings getCallRecording() {
    return callRecording;
  }

  public void setCallRecording(@javax.annotation.Nullable ModelsCallRecordingSettings callRecording) {
    this.callRecording = callRecording;
  }


  public ModelsUserOutputFull callerId(@javax.annotation.Nullable ModelsUserOutputFullCallerid callerId) {
    this.callerId = callerId;
    return this;
  }

  /**
   * Get callerId
   * @return callerId
   */
  @javax.annotation.Nullable
  public ModelsUserOutputFullCallerid getCallerId() {
    return callerId;
  }

  public void setCallerId(@javax.annotation.Nullable ModelsUserOutputFullCallerid callerId) {
    this.callerId = callerId;
  }


  public ModelsUserOutputFull doNotDisturb(@javax.annotation.Nullable ModelsVOIPSharedDoNotDisturb doNotDisturb) {
    this.doNotDisturb = doNotDisturb;
    return this;
  }

  /**
   * Get doNotDisturb
   * @return doNotDisturb
   */
  @javax.annotation.Nullable
  public ModelsVOIPSharedDoNotDisturb getDoNotDisturb() {
    return doNotDisturb;
  }

  public void setDoNotDisturb(@javax.annotation.Nullable ModelsVOIPSharedDoNotDisturb doNotDisturb) {
    this.doNotDisturb = doNotDisturb;
  }


  public ModelsUserOutputFull email(@javax.annotation.Nullable String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(@javax.annotation.Nullable String email) {
    this.email = email;
  }


  public ModelsUserOutputFull enabled(@javax.annotation.Nullable Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Get enabled
   * @return enabled
   */
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(@javax.annotation.Nullable Boolean enabled) {
    this.enabled = enabled;
  }


  public ModelsUserOutputFull firstName(@javax.annotation.Nullable String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * Get firstName
   * @return firstName
   */
  @javax.annotation.Nullable
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(@javax.annotation.Nullable String firstName) {
    this.firstName = firstName;
  }


  public ModelsUserOutputFull id(@javax.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }


  public ModelsUserOutputFull lastName(@javax.annotation.Nullable String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Get lastName
   * @return lastName
   */
  @javax.annotation.Nullable
  public String getLastName() {
    return lastName;
  }

  public void setLastName(@javax.annotation.Nullable String lastName) {
    this.lastName = lastName;
  }


  public ModelsUserOutputFull musicOnHold(@javax.annotation.Nullable ModelsMusicOnHold musicOnHold) {
    this.musicOnHold = musicOnHold;
    return this;
  }

  /**
   * Get musicOnHold
   * @return musicOnHold
   */
  @javax.annotation.Nullable
  public ModelsMusicOnHold getMusicOnHold() {
    return musicOnHold;
  }

  public void setMusicOnHold(@javax.annotation.Nullable ModelsMusicOnHold musicOnHold) {
    this.musicOnHold = musicOnHold;
  }


  public ModelsUserOutputFull presenceId(@javax.annotation.Nullable String presenceId) {
    this.presenceId = presenceId;
    return this;
  }

  /**
   * Get presenceId
   * @return presenceId
   */
  @javax.annotation.Nullable
  public String getPresenceId() {
    return presenceId;
  }

  public void setPresenceId(@javax.annotation.Nullable String presenceId) {
    this.presenceId = presenceId;
  }


  public ModelsUserOutputFull timezone(@javax.annotation.Nullable String timezone) {
    this.timezone = timezone;
    return this;
  }

  /**
   * Get timezone
   * @return timezone
   */
  @javax.annotation.Nullable
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(@javax.annotation.Nullable String timezone) {
    this.timezone = timezone;
  }


  public ModelsUserOutputFull verified(@javax.annotation.Nullable Boolean verified) {
    this.verified = verified;
    return this;
  }

  /**
   * Get verified
   * @return verified
   */
  @javax.annotation.Nullable
  public Boolean getVerified() {
    return verified;
  }

  public void setVerified(@javax.annotation.Nullable Boolean verified) {
    this.verified = verified;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelsUserOutputFull modelsUserOutputFull = (ModelsUserOutputFull) o;
    return Objects.equals(this.callForward, modelsUserOutputFull.callForward) &&
        Objects.equals(this.callRecording, modelsUserOutputFull.callRecording) &&
        Objects.equals(this.callerId, modelsUserOutputFull.callerId) &&
        Objects.equals(this.doNotDisturb, modelsUserOutputFull.doNotDisturb) &&
        Objects.equals(this.email, modelsUserOutputFull.email) &&
        Objects.equals(this.enabled, modelsUserOutputFull.enabled) &&
        Objects.equals(this.firstName, modelsUserOutputFull.firstName) &&
        Objects.equals(this.id, modelsUserOutputFull.id) &&
        Objects.equals(this.lastName, modelsUserOutputFull.lastName) &&
        Objects.equals(this.musicOnHold, modelsUserOutputFull.musicOnHold) &&
        Objects.equals(this.presenceId, modelsUserOutputFull.presenceId) &&
        Objects.equals(this.timezone, modelsUserOutputFull.timezone) &&
        Objects.equals(this.verified, modelsUserOutputFull.verified);
  }

  @Override
  public int hashCode() {
    return Objects.hash(callForward, callRecording, callerId, doNotDisturb, email, enabled, firstName, id, lastName, musicOnHold, presenceId, timezone, verified);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelsUserOutputFull {\n");
    sb.append("    callForward: ").append(toIndentedString(callForward)).append("\n");
    sb.append("    callRecording: ").append(toIndentedString(callRecording)).append("\n");
    sb.append("    callerId: ").append(toIndentedString(callerId)).append("\n");
    sb.append("    doNotDisturb: ").append(toIndentedString(doNotDisturb)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    musicOnHold: ").append(toIndentedString(musicOnHold)).append("\n");
    sb.append("    presenceId: ").append(toIndentedString(presenceId)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    verified: ").append(toIndentedString(verified)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("call_forward");
    openapiFields.add("call_recording");
    openapiFields.add("caller_id");
    openapiFields.add("do_not_disturb");
    openapiFields.add("email");
    openapiFields.add("enabled");
    openapiFields.add("first_name");
    openapiFields.add("id");
    openapiFields.add("last_name");
    openapiFields.add("music_on_hold");
    openapiFields.add("presence_id");
    openapiFields.add("timezone");
    openapiFields.add("verified");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ModelsUserOutputFull
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModelsUserOutputFull.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModelsUserOutputFull is not found in the empty JSON string", ModelsUserOutputFull.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModelsUserOutputFull.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModelsUserOutputFull` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `call_forward`
      if (jsonObj.get("call_forward") != null && !jsonObj.get("call_forward").isJsonNull()) {
        ModelsCallForward.validateJsonElement(jsonObj.get("call_forward"));
      }
      // validate the optional field `call_recording`
      if (jsonObj.get("call_recording") != null && !jsonObj.get("call_recording").isJsonNull()) {
        ModelsCallRecordingSettings.validateJsonElement(jsonObj.get("call_recording"));
      }
      // validate the optional field `caller_id`
      if (jsonObj.get("caller_id") != null && !jsonObj.get("caller_id").isJsonNull()) {
        ModelsUserOutputFullCallerid.validateJsonElement(jsonObj.get("caller_id"));
      }
      // validate the optional field `do_not_disturb`
      if (jsonObj.get("do_not_disturb") != null && !jsonObj.get("do_not_disturb").isJsonNull()) {
        ModelsVOIPSharedDoNotDisturb.validateJsonElement(jsonObj.get("do_not_disturb"));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("first_name") != null && !jsonObj.get("first_name").isJsonNull()) && !jsonObj.get("first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("first_name").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("last_name") != null && !jsonObj.get("last_name").isJsonNull()) && !jsonObj.get("last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_name").toString()));
      }
      // validate the optional field `music_on_hold`
      if (jsonObj.get("music_on_hold") != null && !jsonObj.get("music_on_hold").isJsonNull()) {
        ModelsMusicOnHold.validateJsonElement(jsonObj.get("music_on_hold"));
      }
      if ((jsonObj.get("presence_id") != null && !jsonObj.get("presence_id").isJsonNull()) && !jsonObj.get("presence_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `presence_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("presence_id").toString()));
      }
      if ((jsonObj.get("timezone") != null && !jsonObj.get("timezone").isJsonNull()) && !jsonObj.get("timezone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timezone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timezone").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModelsUserOutputFull.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModelsUserOutputFull' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModelsUserOutputFull> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModelsUserOutputFull.class));

       return (TypeAdapter<T>) new TypeAdapter<ModelsUserOutputFull>() {
           @Override
           public void write(JsonWriter out, ModelsUserOutputFull value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModelsUserOutputFull read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ModelsUserOutputFull given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ModelsUserOutputFull
   * @throws IOException if the JSON string is invalid with respect to ModelsUserOutputFull
   */
  public static ModelsUserOutputFull fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModelsUserOutputFull.class);
  }

  /**
   * Convert an instance of ModelsUserOutputFull to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

