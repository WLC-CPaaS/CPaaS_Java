/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ServiceCallflowAddEditFlowData;
import org.openapitools.client.model.ServiceFeatureCode;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ServiceCallflowAddEditData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class ServiceCallflowAddEditData {
  public static final String SERIALIZED_NAME_FEATURECODE = "featurecode";
  @SerializedName(SERIALIZED_NAME_FEATURECODE)
  @javax.annotation.Nullable
  private ServiceFeatureCode featurecode;

  public static final String SERIALIZED_NAME_FLOW = "flow";
  @SerializedName(SERIALIZED_NAME_FLOW)
  @javax.annotation.Nonnull
  private ServiceCallflowAddEditFlowData flow;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nullable
  private String name;

  public static final String SERIALIZED_NAME_NUMBERS = "numbers";
  @SerializedName(SERIALIZED_NAME_NUMBERS)
  @javax.annotation.Nonnull
  private List<String> numbers = new ArrayList<>();

  public static final String SERIALIZED_NAME_PATTERNS = "patterns";
  @SerializedName(SERIALIZED_NAME_PATTERNS)
  @javax.annotation.Nonnull
  private List<String> patterns = new ArrayList<>();

  public ServiceCallflowAddEditData() {
  }

  public ServiceCallflowAddEditData featurecode(@javax.annotation.Nullable ServiceFeatureCode featurecode) {
    this.featurecode = featurecode;
    return this;
  }

  /**
   * Get featurecode
   * @return featurecode
   */
  @javax.annotation.Nullable
  public ServiceFeatureCode getFeaturecode() {
    return featurecode;
  }

  public void setFeaturecode(@javax.annotation.Nullable ServiceFeatureCode featurecode) {
    this.featurecode = featurecode;
  }


  public ServiceCallflowAddEditData flow(@javax.annotation.Nonnull ServiceCallflowAddEditFlowData flow) {
    this.flow = flow;
    return this;
  }

  /**
   * Get flow
   * @return flow
   */
  @javax.annotation.Nonnull
  public ServiceCallflowAddEditFlowData getFlow() {
    return flow;
  }

  public void setFlow(@javax.annotation.Nonnull ServiceCallflowAddEditFlowData flow) {
    this.flow = flow;
  }


  public ServiceCallflowAddEditData name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public ServiceCallflowAddEditData numbers(@javax.annotation.Nonnull List<String> numbers) {
    this.numbers = numbers;
    return this;
  }

  public ServiceCallflowAddEditData addNumbersItem(String numbersItem) {
    if (this.numbers == null) {
      this.numbers = new ArrayList<>();
    }
    this.numbers.add(numbersItem);
    return this;
  }

  /**
   * Get numbers
   * @return numbers
   */
  @javax.annotation.Nonnull
  public List<String> getNumbers() {
    return numbers;
  }

  public void setNumbers(@javax.annotation.Nonnull List<String> numbers) {
    this.numbers = numbers;
  }


  public ServiceCallflowAddEditData patterns(@javax.annotation.Nonnull List<String> patterns) {
    this.patterns = patterns;
    return this;
  }

  public ServiceCallflowAddEditData addPatternsItem(String patternsItem) {
    if (this.patterns == null) {
      this.patterns = new ArrayList<>();
    }
    this.patterns.add(patternsItem);
    return this;
  }

  /**
   * Get patterns
   * @return patterns
   */
  @javax.annotation.Nonnull
  public List<String> getPatterns() {
    return patterns;
  }

  public void setPatterns(@javax.annotation.Nonnull List<String> patterns) {
    this.patterns = patterns;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceCallflowAddEditData serviceCallflowAddEditData = (ServiceCallflowAddEditData) o;
    return Objects.equals(this.featurecode, serviceCallflowAddEditData.featurecode) &&
        Objects.equals(this.flow, serviceCallflowAddEditData.flow) &&
        Objects.equals(this.name, serviceCallflowAddEditData.name) &&
        Objects.equals(this.numbers, serviceCallflowAddEditData.numbers) &&
        Objects.equals(this.patterns, serviceCallflowAddEditData.patterns);
  }

  @Override
  public int hashCode() {
    return Objects.hash(featurecode, flow, name, numbers, patterns);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceCallflowAddEditData {\n");
    sb.append("    featurecode: ").append(toIndentedString(featurecode)).append("\n");
    sb.append("    flow: ").append(toIndentedString(flow)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    numbers: ").append(toIndentedString(numbers)).append("\n");
    sb.append("    patterns: ").append(toIndentedString(patterns)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("featurecode", "flow", "name", "numbers", "patterns"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(Arrays.asList("flow", "numbers", "patterns"));
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ServiceCallflowAddEditData
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ServiceCallflowAddEditData.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ServiceCallflowAddEditData is not found in the empty JSON string", ServiceCallflowAddEditData.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ServiceCallflowAddEditData.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ServiceCallflowAddEditData` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ServiceCallflowAddEditData.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `featurecode`
      if (jsonObj.get("featurecode") != null && !jsonObj.get("featurecode").isJsonNull()) {
        ServiceFeatureCode.validateJsonElement(jsonObj.get("featurecode"));
      }
      // validate the required field `flow`
      ServiceCallflowAddEditFlowData.validateJsonElement(jsonObj.get("flow"));
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("numbers") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("numbers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `numbers` to be an array in the JSON string but got `%s`", jsonObj.get("numbers").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("patterns") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("patterns").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `patterns` to be an array in the JSON string but got `%s`", jsonObj.get("patterns").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ServiceCallflowAddEditData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ServiceCallflowAddEditData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ServiceCallflowAddEditData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ServiceCallflowAddEditData.class));

       return (TypeAdapter<T>) new TypeAdapter<ServiceCallflowAddEditData>() {
           @Override
           public void write(JsonWriter out, ServiceCallflowAddEditData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ServiceCallflowAddEditData read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ServiceCallflowAddEditData given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ServiceCallflowAddEditData
   * @throws IOException if the JSON string is invalid with respect to ServiceCallflowAddEditData
   */
  public static ServiceCallflowAddEditData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ServiceCallflowAddEditData.class);
  }

  /**
   * Convert an instance of ServiceCallflowAddEditData to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

