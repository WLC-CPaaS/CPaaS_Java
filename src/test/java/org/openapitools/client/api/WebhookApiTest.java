/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CPAASError;
import org.openapitools.client.model.ServiceDocsWebhookDelete;
import org.openapitools.client.model.ServiceDocsWebhookGetAll;
import org.openapitools.client.model.ServiceDocsWebhookGetSingle;
import org.openapitools.client.model.ServiceWebhookAdd;
import org.openapitools.client.model.ServiceWebhookEdit;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WebhookApi
 */
@Disabled
public class WebhookApiTest {

    private final WebhookApi api = new WebhookApi();

    /**
     * Get Webhook List
     *
     * Retrieve the webhook list in an account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1WebhookAccountAccountIDGetTest() throws ApiException {
        String accountID = null;
        Integer pageSize = null;
        Integer currentPage = null;
        ServiceDocsWebhookGetAll response = api.v1WebhookAccountAccountIDGet(accountID, pageSize, currentPage);
        // TODO: test validations
    }

    /**
     * Create Webhook
     *
     * Create a webhook for a specific account ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1WebhookAccountAccountIDPostTest() throws ApiException {
        String accountID = null;
        ServiceWebhookAdd body = null;
        ServiceDocsWebhookGetSingle response = api.v1WebhookAccountAccountIDPost(accountID, body);
        // TODO: test validations
    }

    /**
     * Delete Webhook
     *
     * Remove a webhook identified by its ID for a particular account ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1WebhookAccountAccountIDWebhookIDDeleteTest() throws ApiException {
        String accountID = null;
        Integer webhookID = null;
        ServiceDocsWebhookDelete response = api.v1WebhookAccountAccountIDWebhookIDDelete(accountID, webhookID);
        // TODO: test validations
    }

    /**
     * Get Webhook Details
     *
     * Access details about a single webhook ID for an individual account ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1WebhookAccountAccountIDWebhookIDGetTest() throws ApiException {
        String accountID = null;
        Integer webhookID = null;
        ServiceDocsWebhookGetSingle response = api.v1WebhookAccountAccountIDWebhookIDGet(accountID, webhookID);
        // TODO: test validations
    }

    /**
     * Update Webhook
     *
     * Update a webhook identified by its ID for a distinct account ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1WebhookAccountAccountIDWebhookIDPutTest() throws ApiException {
        String accountID = null;
        String webhookID = null;
        ServiceWebhookEdit body = null;
        ServiceDocsWebhookGetSingle response = api.v1WebhookAccountAccountIDWebhookIDPut(accountID, webhookID, body);
        // TODO: test validations
    }

}
