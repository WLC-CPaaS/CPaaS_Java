/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ModelsGenerateConfigFileRequest;
import org.openapitools.client.model.ProvisioningDocsDocsBrandOutputSingle;
import org.openapitools.client.model.ProvisioningDocsDocsBrandsOutput;
import org.openapitools.client.model.ProvisioningDocsDocsConfigFileOutput;
import org.openapitools.client.model.ProvisioningDocsDocsFamilyOutput;
import org.openapitools.client.model.ProvisioningDocsDocsFamilyOutputSingle;
import org.openapitools.client.model.ProvisioningDocsDocsModelOutput;
import org.openapitools.client.model.ProvisioningDocsDocsModelOutputSingle;
import org.openapitools.client.model.ProvisioningDocsDocsTemplateOutputSingle;
import org.openapitools.client.model.ProvisioningDocsDocsTemplatesOutput;
import org.openapitools.client.model.ResponseProvisionError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProvisioningApi
 */
@Disabled
public class ProvisioningApiTest {

    private final ProvisioningApi api = new ProvisioningApi();

    /**
     * Get Family
     *
     * Retrieve a family&#39;s details by the randomly generated ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1ApBrandBrandFamilyFamilyGetTest() throws ApiException {
        String brand = null;
        String family = null;
        ProvisioningDocsDocsFamilyOutputSingle response = api.v1ApBrandBrandFamilyFamilyGet(brand, family);
        // TODO: test validations
    }

    /**
     * Get Model List
     *
     * Retrieve a list of all models within a family for a brand (e.g., Yealink and Polycom).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1ApBrandBrandFamilyFamilyModelGetTest() throws ApiException {
        String brand = null;
        String family = null;
        String modelName = null;
        Integer pageSize = null;
        String startKey = null;
        String status = null;
        ProvisioningDocsDocsModelOutput response = api.v1ApBrandBrandFamilyFamilyModelGet(brand, family, modelName, pageSize, startKey, status);
        // TODO: test validations
    }

    /**
     * Get Model
     *
     * Retrieve a model&#39;s details by the randomly generated ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1ApBrandBrandFamilyFamilyModelModelGetTest() throws ApiException {
        String brand = null;
        String family = null;
        String model = null;
        ProvisioningDocsDocsModelOutputSingle response = api.v1ApBrandBrandFamilyFamilyModelModelGet(brand, family, model);
        // TODO: test validations
    }

    /**
     * Get Template List
     *
     * Retrieve a list of all templates for a model within a brand (e.g., Yealink and Polycom).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1ApBrandBrandFamilyFamilyModelModelTemplateGetTest() throws ApiException {
        String brand = null;
        String family = null;
        String model = null;
        String firmware = null;
        Integer pageSize = null;
        String startKey = null;
        String status = null;
        String templateName = null;
        ProvisioningDocsDocsTemplatesOutput response = api.v1ApBrandBrandFamilyFamilyModelModelTemplateGet(brand, family, model, firmware, pageSize, startKey, status, templateName);
        // TODO: test validations
    }

    /**
     * Get Template
     *
     * Retrieve details about a template for a model by the randomly generated ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1ApBrandBrandFamilyFamilyModelModelTemplateTemplateGetTest() throws ApiException {
        String brand = null;
        String family = null;
        String model = null;
        String template = null;
        ProvisioningDocsDocsTemplateOutputSingle response = api.v1ApBrandBrandFamilyFamilyModelModelTemplateTemplateGet(brand, family, model, template);
        // TODO: test validations
    }

    /**
     * Get Family List
     *
     * Retrieve a list of all families for a brand (e.g., Yealink and Polycom).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1ApBrandBrandFamilyGetTest() throws ApiException {
        String brand = null;
        String familyName = null;
        Integer pageSize = null;
        String startKey = null;
        String status = null;
        ProvisioningDocsDocsFamilyOutput response = api.v1ApBrandBrandFamilyGet(brand, familyName, pageSize, startKey, status);
        // TODO: test validations
    }

    /**
     * Get Brand
     *
     * Retrieve a brand&#39;s details by the randomly generated ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1ApBrandBrandGetTest() throws ApiException {
        String brand = null;
        ProvisioningDocsDocsBrandOutputSingle response = api.v1ApBrandBrandGet(brand);
        // TODO: test validations
    }

    /**
     * Get Brand
     *
     * Retrieve a list of all brands (e.g., Yealink and Polycom) by client.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1ApBrandGetTest() throws ApiException {
        String brandName = null;
        Integer pageSize = null;
        String startKey = null;
        String status = null;
        ProvisioningDocsDocsBrandsOutput response = api.v1ApBrandGet(brandName, pageSize, startKey, status);
        // TODO: test validations
    }

    /**
     * Generate config file
     *
     * Generate a configuration file that includes a list of parameters passed to the specified template_id in the request payload, with populated values returned in the response.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1ApConfigfileGeneratePostTest() throws ApiException {
        ModelsGenerateConfigFileRequest params = null;
        ProvisioningDocsDocsConfigFileOutput response = api.v1ApConfigfileGeneratePost(params);
        // TODO: test validations
    }

}
