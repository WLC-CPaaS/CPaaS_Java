/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CPAASError;
import org.openapitools.client.model.ServiceDocsCallDailySummary;
import org.openapitools.client.model.ServiceDocsCallDetail;
import org.openapitools.client.model.ServiceDocsCallMonthlySummary;
import org.openapitools.client.model.ServiceDocsCdrGetAll;
import org.openapitools.client.model.ServiceDocsCdrGetSingle;
import org.openapitools.client.model.ServiceDocsEndpointList;
import org.openapitools.client.model.ServiceDocsEventDailySummary;
import org.openapitools.client.model.ServiceDocsEventDetail;
import org.openapitools.client.model.ServiceDocsEventMonthlySummary;
import org.openapitools.client.model.ServiceDocsFeatureDailySummary;
import org.openapitools.client.model.ServiceDocsFeatureMonthlySummary;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DataApi
 */
@Disabled
public class DataApiTest {

    private final DataApi api = new DataApi();

    /**
     * Get CDR Details
     *
     * Retrieve the details of a single CDR record from an account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1AccountAccountIDCdrCdrIDGetTest() throws ApiException {
        String accountID = null;
        String cdrID = null;
        ServiceDocsCdrGetSingle response = api.v1AccountAccountIDCdrCdrIDGet(accountID, cdrID);
        // TODO: test validations
    }

    /**
     * Get CDR List
     *
     * Retrieve a list of CDRs in a specific account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1AccountAccountIDCdrGetTest() throws ApiException {
        String accountID = null;
        String pageSize = null;
        String startKey = null;
        String createdFrom = null;
        String createdTo = null;
        ServiceDocsCdrGetAll response = api.v1AccountAccountIDCdrGet(accountID, pageSize, startKey, createdFrom, createdTo);
        // TODO: test validations
    }

    /**
     * Get Call Daily Summary List
     *
     * Retrieve a daily summary of calls, including the account ID that made or received a call, the call type, the month and year, the duration, and other relevant information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1DataCallDailySummaryGetTest() throws ApiException {
        String accountId = null;
        String callType = null;
        String endDate = null;
        Integer pageSize = null;
        String startDate = null;
        String startKey = null;
        ServiceDocsCallDailySummary response = api.v1DataCallDailySummaryGet(accountId, callType, endDate, pageSize, startDate, startKey);
        // TODO: test validations
    }

    /**
     * Get Call Detail List
     *
     * Retrieve specific details about a call (e.g., caller, recipient, date, time, duration, etc.).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1DataCallDetailGetTest() throws ApiException {
        String account = null;
        String callType = null;
        String calleeName = null;
        String calleeNumber = null;
        String callerName = null;
        String callerNumber = null;
        String endDate = null;
        Integer pageSize = null;
        String startDate = null;
        String startKey = null;
        ServiceDocsCallDetail response = api.v1DataCallDetailGet(account, callType, calleeName, calleeNumber, callerName, callerNumber, endDate, pageSize, startDate, startKey);
        // TODO: test validations
    }

    /**
     * Get Call Detail List
     *
     * Retrieve a monthly summary of calls, including which accounts made or received calls, the call type, and other relevant information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1DataCallMonthlySummaryGetTest() throws ApiException {
        String account = null;
        String callType = null;
        Integer endMonth = null;
        Integer endYear = null;
        Integer pageSize = null;
        String startKey = null;
        Integer startMonth = null;
        Integer startYear = null;
        ServiceDocsCallMonthlySummary response = api.v1DataCallMonthlySummaryGet(account, callType, endMonth, endYear, pageSize, startKey, startMonth, startYear);
        // TODO: test validations
    }

    /**
     * Get Endpoint List
     *
     * Access the endpoint list for each CPaaS API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1DataEndpointListGetTest() throws ApiException {
        String endpointName = null;
        String featureName = null;
        Integer pageSize = null;
        String startKey = null;
        String transactionType = null;
        String version = null;
        ServiceDocsEndpointList response = api.v1DataEndpointListGet(endpointName, featureName, pageSize, startKey, transactionType, version);
        // TODO: test validations
    }

    /**
     * Get Event Daily Summary List
     *
     * Obtain a daily summary of events in a CPaaS account (e.g., setting/resetting the presence status for a user or extension).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1DataEventDailySummaryGetTest() throws ApiException {
        String accountId = null;
        String component = null;
        String endDate = null;
        Integer pageSize = null;
        String startDate = null;
        String startKey = null;
        ServiceDocsEventDailySummary response = api.v1DataEventDailySummaryGet(accountId, component, endDate, pageSize, startDate, startKey);
        // TODO: test validations
    }

    /**
     * Get Event Details
     *
     * Obtain specific details about an event (e.g., an E911 notification, a deleted account, or a created user).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1DataEventDetailGetTest() throws ApiException {
        String accountId = null;
        String component = null;
        String endDateTime = null;
        String eventName = null;
        String execStatus = null;
        Integer pageSize = null;
        String startDateTime = null;
        String startKey = null;
        String username = null;
        ServiceDocsEventDetail response = api.v1DataEventDetailGet(accountId, component, endDateTime, eventName, execStatus, pageSize, startDateTime, startKey, username);
        // TODO: test validations
    }

    /**
     * Get Event Monthly Summary List
     *
     * Obtain a monthly summary of events in a CPaaS account (e.g., adding media files or assigning phone numbers).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1DataEventMonthlySummaryGetTest() throws ApiException {
        String accountId = null;
        String component = null;
        Integer endMonth = null;
        Integer endYear = null;
        Integer pageSize = null;
        String startKey = null;
        Integer startMonth = null;
        Integer startYear = null;
        ServiceDocsEventMonthlySummary response = api.v1DataEventMonthlySummaryGet(accountId, component, endMonth, endYear, pageSize, startKey, startMonth, startYear);
        // TODO: test validations
    }

    /**
     * Get Feature Daily Summary List
     *
     * Retrieve a daily summary about a feature, including usage, which accounts execute the steps, and other relevant information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1DataFeatureDailySummaryGetTest() throws ApiException {
        String endDate = null;
        String featureName = null;
        Integer pageSize = null;
        String startDate = null;
        String startKey = null;
        ServiceDocsFeatureDailySummary response = api.v1DataFeatureDailySummaryGet(endDate, featureName, pageSize, startDate, startKey);
        // TODO: test validations
    }

    /**
     * Get Feature Monthly Summary List
     *
     * Retrieve a monthly summary about a featureâ€™s usage, new users, updates, and other relevant information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1DataFeatureMonthlySummaryGetTest() throws ApiException {
        Integer endMonth = null;
        Integer endYear = null;
        String featureName = null;
        Integer pageSize = null;
        String startKey = null;
        Integer startMonth = null;
        Integer startYear = null;
        ServiceDocsFeatureMonthlySummary response = api.v1DataFeatureMonthlySummaryGet(endMonth, endYear, featureName, pageSize, startKey, startMonth, startYear);
        // TODO: test validations
    }

}
